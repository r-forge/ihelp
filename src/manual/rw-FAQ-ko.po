# Korean translations for R-manual-translation package
# doc/manual/rw-FAQ.texi
# Copyright (C) 2008-2015 Chel Hee Lee, and R Translation Teams
# 
# This file is distributed under the same license as the R distribution.
# Chel Hee Lee <chl948@mail.usask.ca>, 2008-2015.
# 
msgid ""
msgstr ""
"Project-Id-Version: R-manual-translation-ko 0.3.0.1\n"
"Report-Msgid-Bugs-To: chl948@mail.usask.ca\n"
"POT-Creation-Date: 2015-02-02 20:51-0600\n"
"PO-Revision-Date: 2015-02-02 20:51-0600\n"
"Last-Translator: Chel Hee Lee  <chl948@mail.usask.ca>\n"
"Language-Team: Chel Hee Lee  <chl948@mail.usask.ca>\n"
"Language: ko\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
#
#. type: title
#, no-wrap
msgid "R for Windows FAQ"
msgstr "R for Windows FAQ (translated in Korean)"
#
#. type: Plain text
msgid "@documentlanguage en @documentencoding ISO-8859-1"
msgstr ""
#
#. type: ifhtml
msgid "@html <hr>"
msgstr ""
#
#. type: subtitle
#, no-wrap
msgid "Frequently Asked Questions on R for Windows"
msgstr ""
#
#. type: subtitle
#, no-wrap
msgid "Version @value{VERSION}"
msgstr ""
#
#. type: author
#, no-wrap
msgid "B. D. Ripley and D. J. Murdoch"
msgstr ""
#
#. type: ifinfo
msgid "R for Windows FAQ @* Frequently Asked Questions on R for Windows @* Version for @value{VERSION} @* B. D. Ripley and D. J. Murdoch @*"
msgstr ""
#
#. type: ifhtml
msgid "@html <h2>Version for <tt>@value{VERSION}</tt></h2> <address>B. D. Ripley and D. J. Murdoch</address> <hr>"
msgstr "@html <h2>Version for <tt>@value{VERSION}</tt></h2> <address>B. D. Ripley and D. J. Murdoch</address> <hr>"
#
#. type: Plain text
msgid "@paragraphindent 0"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Top"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Introduction"
msgstr ""
#
#. type: node
#, no-wrap
msgid "(dir)"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Installation and Usage"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Languages and Internationalization"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Packages"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Windows Features"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Workspaces"
msgstr ""
#
#. type: node
#, no-wrap
msgid "The R Console"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Building from Source"
msgstr ""
#
#. type: Plain text
msgid "@newchap{}"
msgstr ""
#
#. type: Plain text
msgid "This FAQ is for the Windows port of R: it describes features specific to that version.  The main R FAQ can be found at"
msgstr ""
#
#. type: display
#, no-wrap
msgid "@uref{http://CRAN.R-project.org/doc/FAQ/R-FAQ.html}.\n"
msgstr ""
#
#. type: Plain text
msgid "The information here applies only to recent versions of R for Windows, (@samp{3.1.0} or later).  It is biased towards users of 64-bit Windows."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Where can I find the latest version?"
msgstr "어디에서 최근 버젼을 찾을 수 있을까요?"
#
#. type: node
#, no-wrap
msgid "How do I install R for Windows?"
msgstr "어떻게 윈도우에서 R을 설치할 수 있나요?"
#
#. type: node
#, no-wrap
msgid "How do I check an installation?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I customize the installation?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I run it?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I run R from a CD or USB drive?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I UNinstall R?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "What's the best way to upgrade?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "There seems to be a limit on the memory it uses!"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How can I keep workspaces for different projects in different directories?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I print from R?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I use R CMD BATCH?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I use 3.2.0 Under development (unstable) with ESS and Emacs?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "What are HOME and working directories?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I set environment variables?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "R can't find my file"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Does R use the Registry?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Does R support automation?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "The Internet download functions fail."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Entering certain characters crashes Rgui."
msgstr ""
#
#. type: node
#, no-wrap
msgid "What does 'DLL attempted to change FPU control word' mean?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Other strange crashes."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Why does R never use more than 50% of my CPU?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Does R run under Windows Vista?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Quotes don't come out right on the console/terminal/pager"
msgstr ""
#
#. type: node
#, no-wrap
msgid "There is no tilde on my keyboard"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I use R on 64-bit Windows?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Should I run 32-bit or 64-bit R?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can both 32- and 64-bit R be installed on the same machine?"
msgstr ""
#
#. type: section
#, no-wrap
msgid "Rcmd is not found in my PATH!"
msgstr ""
#
#. type: Plain text
msgid "Go to any CRAN site (see @uref{http://cran.r-project.org/@/mirrors.html} for a list), navigate to the @file{bin/windows/base} directory and collect the file(s) you need.  The current release is distributed as an installer @samp{3.2.0 Under development (unstable)-win.exe} of about 60MB."
msgstr ""
#
#. type: Plain text
msgid "There are also links on that page to the @samp{r-patched} and @samp{r-devel} snapshots.  These are frequently updated builds of development versions of R.  The @samp{r-patched} build includes bug fixes to the current release, and @samp{r-devel} contains these as well as changes that are planned to eventually make it into the next @samp{x.y.0} release."
msgstr ""
#
#. type: Plain text
msgid "Current binary versions of R run on Windows XP or later, including on 64-bit versions: @xref{Can I use R on 64-bit Windows?}. The last version known to run on Windows 2000 was 2.12.2."
msgstr ""
#
#. type: Plain text
msgid "We only test on versions of Windows currently supported by Microsoft, mainly 64-bit Windows 7 and Server 2008."
msgstr "여기에서는 마이크로소프트사가 지원하는 윈도우 버젼에 대해서는 테스트한 것임을 알려드립니다. 그것은 대체로 윈도우 7, 8 (64비트 버전), 윈도 XP (32 비트, SP3) 까지 입니다. "
#
#. type: Plain text
msgid "Your file system must allow case-honouring long file names (as is likely except perhaps for some network-mounted systems).  A installation takes 75--110MB of disk space (up to 150MB if ICU was included in the build)"
msgstr ""
#
#. type: Plain text
msgid "If you want to be able to build packages from sources, we recommend that you choose an installation path not containing spaces.  (Using a path with spaces in will probably work, but is little-tested.)  Users of Vista/Windows 7/8/Server 2008/2012 installing for a single user using an account with administrator rights@footnote{Non-administrator accounts will automatically be offered a default installation directory in the user area.} should consider installing into a non-system area (such as @file{C:\\R}).  Installing to a network share (a filepath starting with @code{\\\\machine\\...}) is not supported: such paths will need to mapped to a network drive."
msgstr "만약 소스에서 패키지를 구현하고 싶다면 공백이 없는 설치 경로를 선택하시기를 추천해드립니다. (공백이 있는 설치 경로 역시도 정상적으로  작동할 수 있지만 충분하 테스트가 이루어지지 않았습니다.) 비스타/윈도우 7,8/서버 2008,2012 사용자의 경우에는 관리자 권한을 가진 사용자가 시스템이 설치되지 않는 경로에 @file{C:/R} 을 설치해야 합니다. 네트워크에서 공유되는 경로에 R 을 설치하는 것은 지원되고 있지 않습니다. 그러한 경우에는 반드시 네트워크 드라이버에 설치경로가 제한되어야 합니다. "
#
#. type: Plain text
msgid "To install use @samp{3.2.0 Under development (unstable)-win.exe}.  Just double-click on the icon and follow the instructions.  If you have an account with Administrator privileges you will be able to install R in the @file{Program Files} area and to set all the optional registry entries; otherwise you will only be able to install R in your own file area.  You may need to confirm that you want to proceed with installing a program from an `unknown' or `unidentified' publisher."
msgstr "설치하기 위해 @samp{3.0.0-win.exe}를 사용하세요. 그 exe 파일을 더블클릭하고, 설명에 따라 진행하세요.만약 사용자가 Administrator preivileges 계정을 가지고 있다면, '@file{Program Files}'안에 R을 설치할수 있고, 모든 optional registry entries들을 설정할 수 있습니다. 그게 아니라면, 사용자는 오직 자신만의 파일 공간에 R을 설치 할 수 있습니다. 사용자는 어쩌면 'unkbown' 혹은 'unidentified' publisher로 부터의 프로그램을 설치하는 과정을 확인할 필요가 있습니다."
#
#. type: Plain text
msgid "After installation you should choose a working directory for R.  You will have a shortcut to @file{Rgui.exe} on your desktop and/or somewhere on the Start menu file tree, and perhaps also in the Quick Launch part of the taskbar (Vista and earlier).  Right-click each shortcut, select Properties... and change the `Start in' field to your working directory.  (If your account was not the one used for installation, you may need to copy the shortcut before editing it.)"
msgstr ""
#
#. type: Plain text
msgid "On some systems you will have two shortcuts, one for 32-bit with a label starting @code{R i386} and one for 64-bit starting @code{R x64} (@pxref{Should I run 32-bit or 64-bit R?})"
msgstr "몇몇 시스템을 가진 사용자들은 두개의 바로가기를 갖게 될 것입니다. 하나는 starting R(@code{i386}) 라벨을 가진 32bit를 , 다른 하나(@code{R x64})는 64bit를 위한 것 입니다. (@pxref{Should I run 32-bit or 64-bit R?} 를 참고하십시오)"
#
#. type: Plain text
msgid "You may also want to add command-line arguments at the end of the Target field (@emph{after} any final double quote, and separated by a space), for example @code{--sdi --max-mem-size=1G}.  You can also set environment variables at the end of the Target field, for example @code{R_LIBS=p:/myRlib}, and if you want to ensure that menus and messages are in (American) English, @code{LANGUAGE=en}."
msgstr "사용자는 command line arguments를 Target Field의 마지막에 추가하고 싶을지도 모릅니다(any final double quote와 공간에 의한 구분 이후에) 예를드면 다음과 같습니다 @code{--sdi --max-mem-size=1G}. 사용자는 또한 Target field의 마직막에 변수 환경을 설정할수 있습니다. 예를 들면 for example @code{R_LIBS=p:/myRlib} 입니다. 그리고 만약 사용자가 menus와 messages를 영문으로 등록하고 싶으면, @code{LANGUAGE=en}."
#
#. type: Plain text
msgid "It is also possible to install from an MSI file, which will be of interest only for system administrators.  For how to build the MSI file, see the `R Installation and Administration Manual'."
msgstr "MSI 파일(시스템 관리자들에게는 흥미로울 것입니다)을 이용하여 설치하는 것 또한 가능합니다. 어떻게 MSI 파일을 만드는지에 대해서는 'R Installation and Administration Manual'를 참고 하십시오."
#
#. type: section
#, no-wrap
msgid "How do I check an installation is not corrupt?"
msgstr ""
#
#. type: Plain text
msgid "Relates to earlier installers, removed in R 2.11.0."
msgstr "R 2.11.0에서 제거된 설치파일들과 관련되어 있습니다."
#
#. type: Plain text
msgid "The normal way to customize the installation is by selecting components from the wizards shown by the installer.  However, sysadmins might like to install R from scripts, and the following command-line flags are available for use with the installer."
msgstr "사용자가 원하는 대로 설치하는 일반적인 방법은 installer 마법사로 부터 콤포넨트를 선택하는 것 입니다. 하지만 sysadmin들은 스크립트를 이용하여 R 설치하는 것을 좋아하고, installer의 사용은 following command-line flags를 이용할 수 있습니다."
#
#. type: item
#, no-wrap
msgid "/SILENT"
msgstr ""
#
#. type: table
msgid "only show the installation progress window and error messages."
msgstr "오직 설치 과정 윈도우와 에러 메세지만을 보여줍니다."
#
#. type: item
#, no-wrap
msgid "/VERYSILENT"
msgstr ""
#
#. type: table
msgid "only show error messages."
msgstr "오직 에러 메세지만 보여줍니다."
#
#. type: item
#, no-wrap
msgid "/DIR=\"x:\\dirname\""
msgstr ""
#
#. type: table
msgid "set the default installation directory"
msgstr "기본 설치 directory를 설정합니다"
#
#. type: item
#, no-wrap
msgid "/GROUP=\"folder name\""
msgstr ""
#
#. type: table
msgid "set the default Start-menu group name"
msgstr "기본 Start-menu group name을 설정합니다"
#
#. type: item
#, no-wrap
msgid "/COMPONENTS=\"comma separated list of component names\""
msgstr ""
#
#. type: table
msgid "set the initial list of components: Components are named @samp{main}, @samp{i386}, @samp{x64} and @samp{translations}."
msgstr "콤포넨트의 이니셜 리스트를 설정합니다. 콤포넨트들의 이름은 @samp{main}, `@samp{386} , @samp{x64}, @samp{translations} 입니다. "
#
#. type: Plain text
msgid "It is also possible to save the settings used to a file and later reload those settings using"
msgstr ""
#
#. type: item
#, no-wrap
msgid "/SAVEINF=\"filename\""
msgstr ""
#
#. type: table
msgid "save the settings to the specified file.  Don't forget to use the quotes if the filename contains spaces."
msgstr "특정한 파일에 대한 설정을 저장합니다. 만약 파일이름에 공백이 있다면, quotes를 사용해 주시기 바랍니다."
#
#. type: item
#, no-wrap
msgid "/LOADINF=\"filename\""
msgstr ""
#
#. type: table
msgid "instructs the installer to load the settings from the specified file after having checked the command line."
msgstr "command line을 확인한 이후,installer에게 특정한 파일로부터 설정들을 불러오도록 지시합니다."
#
#. type: Plain text
msgid "A successful installation has exit code 0: unsuccessful ones may give 1, 2, 3, 4 or 5.  See the help for Inno Setup (@uref{http://jrsoftware.org/@/ishelp.php}) for details."
msgstr ""
#
#. type: Plain text
msgid "We have some facilities for building a customized installer, in particular to add packages to the installer.  See the `R Installation and Administration' manual in the subsection `Building the installers'."
msgstr "저희는 사용자지정 installer 설계를 위한 설비들을 가지고 있습니다 (특별히 installer에 패키지 더하는 것). 'Building the installers'안의 'R Installation and Administration' 메뉴얼을 보십시오."
#
#. type: Plain text
msgid "Just double-click on the shortcut you prepared at installation."
msgstr "사용자가 준비했었던 installation의 바로가기를 더블클릭하십시오. "
#
#. type: Plain text
msgid "If you want to set up another project, make a new shortcut or use the existing one and change the `Start in' field of the Properties."
msgstr " 만약 사용자가 다른 프로젝트를 셋업하기 원한다면, 새로운 바로가기를 만들거나, 혹은 이미 만들어진 것을 사용하시고, 'Start in'(field of the Properties) 를 변경하십시오."
#
#. type: Plain text
msgid "You may if you prefer run R from the command line of any shell you use, for example a `Command Prompt' or a port of a Unix shell such as @command{tcsh} or @command{bash}. (The command line can be anything you would put in the Target field of a shortcut, and the starting directory will be the current working directory of the shell.  Note that the R executables are not by default added to the @env{PATH}.)  People running from a terminal usually prefer to run @command{Rterm.exe} and not @command{Rgui.exe}."
msgstr ""
#
#. type: Plain text
msgid "Yes, with care.  A basic R installation is relocatable, so you can burn an image of the R installation on your hard disc or install directly onto a removable storage device such as a flash-memory USB drive."
msgstr "가능합니다. 기본적인 R installation 은 재배치 되어 질 수 있으며, 그로인해 사용자는 R installation 이미지를 하드디스크 혹은 외부 저장 기기(USB 메모리 등)에 구울 수 있습니다"
#
#. type: Plain text
msgid "Running R does need access to a writable temporary directory and to a home directory, and in the last resort these are taken to be the current directory.  This should be no problem on a properly configured version of Windows, but otherwise does mean that it may not be possible to run R without creating a shortcut starting in a writable folder."
msgstr "R 을 실행시키는 것은 쓰기가 가능한 일시적인 directory와 home directory에 대한 엑세스를 필요로 하고,and in the last resort these are taken to be the current directory. 적절하게 환경설정된 윈도우즈의 버전을 문제가 없어야만 하지만, 만약 아니라면, 쓰기가능한 폴더안에 바로가기 생성하는것 없이는 R을 실행하는 것을 아마 불가능 할 것입니다."
#
#. type: Plain text
msgid "Normally you can do this from the @samp{Programs and Features} group in the Control Panel.  If it does not appear there, run @file{unins000.exe} in the top-level installation directory.  On recent versions of Windows you may be asked to confirm that you wish to run a program from an `unknown' or `unidentified' publisher."
msgstr ""
#
#. type: Plain text
msgid "Uninstalling R only removes files from the initial installation, not (for example) packages you have installed or updated."
msgstr "Uninstalling R은 오직 첫번째로 설치된 파일들만 제거합니다. 이것은 사용자가 지금까지 설치하고 업데이트한 패키지들은 삭제하지 않는다는 말과 같습니다. "
#
#. type: Plain text
msgid "If all else fails, you can just delete the whole directory in which R was installed."
msgstr "만약 모든 다른것들이 실패한다면, 사용자는 R이 설치된 whole directory를 삭제하십시오"
#
#. type: Plain text
msgid "That's a matter of taste.  For most people the best thing to do is to uninstall R (see the previous Q), install the new version, copy any installed packages to the library folder in the new installation, run @code{update.packages(checkBuilt=TRUE, ask=FALSE)} in the new R and then delete anything left of the old installation.  Different versions of R are quite deliberately installed in parallel folders so you can keep old versions around if you wish."
msgstr "이것은 사람의 기호에 따라 다릅니다. 대부분의 사람들에게 최고의 방법은 R을 삭제한 후, 새로운 버전을 설치하고, 새롭게 설치된 library 폴더로 설치된 패키지들을 복사하는 것 입니다. 새로운 R의 @code{update.packages(checkBuilt=TRUE, ask=FALSE)}를 실행한 다음 이전에 설치되었던 것들을 삭제하십시오. 다양한 R 버전들은 계획적으로 평행적인 폴더에 설치되어질수 있고, 이로 인해 사용자는 오래된 버전들을 유지할 수 있습니다."
#
#. type: Plain text
msgid "For those with a personal library (folder @file{R\\win-library\\@var{x.y}} of your home directory, @file{R\\win64-library\\@var{x.y}} on 64-bit builds), you will need to update that too when the minor version of R changes (e.g.@: from 3.0.2 to 3.1.0).  A simple way to do so is to copy (say) @file{R\\win-library\\3.0} to @file{R\\win-library\\3.1} before running @code{update.packages(checkBuilt=TRUE, ask=FALSE)}."
msgstr ""
#
#. type: Plain text
msgid "Indeed there is.  It is set by the command-line flag @option{--max-mem-size} (@pxref{How do I install R for Windows?}) or by environment variable @env{R_MAX_MEM_SIZE}."
msgstr "command-line flag @option{--max-mem-size} 혹은 환경 변수 @env{R_MAX_MEM_SIZE} 에 의해서 그 것은 설정되었습니다( @pxref{How do I install R for Windows?}를 보십시오)."
#
#. type: Plain text
msgid "For a 64-bit build of R it defaults to the amount of RAM."
msgstr "64 비트 R 에 대해서, 그 것은 RAM 용량 만큼은 기본값으로 합니다"
#
#. type: Plain text
msgid "For a 32-bit build of R it defaults to the smaller of the amount of physical RAM in the machine and 0.5GB less than the limit on user virtual memory for a process (most often 2GB when using a 32-bit edition of Windows)."
msgstr "32비트 R에 대해서는, 실제 RAM의 양보다 적은 양이 기본값으로 설정되고, 프로세스에 대한 유저 가상메모리의 제한보다 0.5 GB 적습니다( 32비트 윈도우즈는 대부분 2GB를 사용합니다)."
#
#. type: Plain text
msgid "Use @code{?Memory} and @code{?memory.size} for information about memory usage.  The limit can be raised (if possible) by calling @code{memory.limit} within a running R session."
msgstr "메모리 사용 정보를 원하신 다면 @code{Memory} 와@code{?memory.size}사용하십시오 만약 가능하다면, 사용자는 실행되고있는 R session안의 @code{memory.limit}를 불러옴으로써 용량제한을 증가시킬수 있습니다"
#
#. type: Plain text
msgid "The 32-bit executables support up to 3GB of user address space per process under suitably enabled versions of 32-bit Windows (see @uref{http://www.microsoft.com/@/whdc/@/system/@/platform/@/server/@/PAE/@/PAEmem.mspx}, @uref{http://msdn.microsoft.com/@/en-us/@/library/@/bb613473%28VS.85%29.aspx}; this is not enabled by default).  On such systems, the default for @code{--max-mem-size} is the smaller of the amount of RAM and 2.5GB.  On all but the earliest 64-bit versions of Windows the user address space for a 32-bit process is 4GB, and there the default for @code{--max-mem-size} is the smaller of the amount of RAM and 3.5GB."
msgstr "32비트로 실행가능한 것들은 최고 32비트 윈도우버전들이 안정적으로 이용되어지는 프로세스 마다 user address space 의 3GB까지 지원합니다.(see @uref{http://www.microsoft.com/whdc/system/platform/server/PAE/PAEmem.mspx}, @uref{http://msdn.microsoft.com/en-us/library/bb613473%28VS.85%29.aspx}; this is not enabled by default). @code{--max-mem-size}에 대한 기본설정들은 RAM 과 2.5GB 용량보다 작습니다.초기 64비트 윈도우 버전을 제외한 모든 버전들의 32비트 프로세스에 대한 user address space는 4GB 이고, @code{--max-mem-size}에 대한 기본설정을 RAM과 3.5GB의 양보타 적습니다."
#
#. type: Plain text
msgid "Create a separate shortcut for each project: see Q2.5.  All the paths to files used by R are relative to the starting directory, so setting the `Start in' field automatically helps separate projects."
msgstr "각각의 프로젝트에 대한 분활된 바로가기을 생성하십시오: Q2.5를 보십시오. 모든 R에 의해 이용되어지는 파일 경로들은 starting directory와 연관됩니다. 그러므로, 'Start in' 필드를 세팅하는 것은 자동적을 separate progect 들을 도와줍니다"
#
#. type: Plain text
msgid "Alternatively, start R by double-clicking on a saved @file{.RData} file in the directory for the project you want to use, or drag-and-drop a file with extension @file{.RData} onto an R shortcut.  In either case, the working directory will be set to that containing the file."
msgstr "다른 방법으로는, 사용자가 사용하기 원하는 프로젝트에 대한 directory안의 '@file{.Rdata}' file 클릭함으로써 R을 시작하거나, extension '@file{.RData} 파일을 R 바로가기 위에 드래그 앤 드랍함으로써 R을 시작하십시오"
#
#. type: Plain text
msgid "It depends what you want to print."
msgstr "이것은 사용자가 어떤 것을 프린터하느냐에 의해서 달라집니다"
#
#. type: itemize
msgid "You can print the graphics window from its menu or by using @code{dev.print} with suitable arguments (see its help page: most likely @code{dev.print(win.graph)} will work)."
msgstr "사용자는 메뉴의 그래픽 윈도우를 통하거나 @code{dev.print}(with suitable arguments) 를 사용함으로써 프린트 할수있습니다(도움말 페이지를 보십시오: most likely @code{dev.print}(win.graph) will work). "
#
#. type: itemize
msgid "You can print from the R console or pager by @samp{File | Print}.  (This will print the selection if there is one, otherwise the whole console or pager contents.)"
msgstr "사용자는 R 콘솔 혹은 @samp{File | Print}에 의한 pager로 부터 프린트 할수있습니다.(만약 하나만 있다면,이것은 selection 을 프린트할 것입니다. 만약 아니라면, 전체 콘솔 혹은 pager contents 프린트 합니다)."
#
#. type: itemize
msgid "You can print help files from the pager or HTML browser."
msgstr "사용자는 pager 나 HTML 브라우저 로 부터 help 파일들을 프리트 할 수 있습니다."
#
#. type: itemize
msgid "If you have LaTeX installed and a PDF printing system you can print help files by @code{help(fn_name, help_type=\"PDF\")}."
msgstr "만약 사용자가 설치된 LaTeX와 PostScript 혹은 PDF 프린팅 시스템를 가지고 있다면, @code{help(fn_name, help_type=\"postscript\") (or \"PDF\")}에 의해서 도움 파일은 프린트 할수 있습니다."
#
#. type: section
#, no-wrap
msgid "Can I use @code{R CMD BATCH}?"
msgstr ""
#
#. type: Plain text
msgid "Yes: use @code{R CMD BATCH --help} or @code{?BATCH} for full details."
msgstr "할수있습니다. 모든 세부사항을 보려면R @code{CMD BATCH --help} or @code{?BATCH} 를 사용하십시오. "
#
#. type: Plain text
msgid "You can also set up a batch file using @command{Rterm.exe}.  A sample batch file might contain (as one line)"
msgstr "사용자는 @command{Rterm.exe}를 사용하면 batch 파일을 설정 할 수있습니다. batch 파일 샘플은 포함할지도 모릅니다."
#
#. type: example
#, no-wrap
msgid "path_to_R\\bin\\x64\\Rterm.exe --no-restore --no-save < %1 > %1.out 2>&1\n"
msgstr ""
#
#. type: Plain text
msgid "The purpose of @code{2>&1} is to redirect warnings and errors to the same file as normal output."
msgstr ""
#
#. type: Plain text
msgid "Yes.  ESS has for a long time supported R under Windows: it does so by running @code{Rterm.exe} without a visible console."
msgstr "가능합니다. ESS는 윈도우 운영체제에 대한 R LTS(long time supported R)을 가지고 있습니다."
#
#. type: Plain text
msgid "For help with ESS, please send email to @email{ESS-help@@stat.ethz.ch}, not the R mailing lists."
msgstr "이것은 콘솔없이 @code{Rterm.exe}를 통해서 실행됩니다. ESS에 대한 도움말을 위해서 R mailing lists가 아닌 @email{ESS-help@@stat.ethz.ch}로 이메일 하시기 바랍니다."
#
#. type: Plain text
msgid "Several places in the documentation use these terms."
msgstr "documentation안의 명명 장소들은 이것들과 같은 용어(HOME, working directories)들을 사용합니다."
#
#. type: Plain text
msgid "The working directory is the directory from which @code{Rgui} or @command{Rterm} was launched, unless a shortcut was used when it is given by the `Start in' field of the shortcut's properties.  You can find this from R code by the call @code{getwd()}."
msgstr "working directory는 @code{Rgui} 혹은 @code{Rterm}이 런치된 directory 입니다( 바로가기 설정의 'Start in' 필드에 의해서 그것이 주어졌을 때, 바로가기를 사용하지 않는다면). 사용자는 @code{getwd()}코드를 사용함으로써 이것을 찾아낼 수 있습니다."
#
#. type: Plain text
msgid "The home directory is set as follows: If environment variable @env{R_USER} is set, its value is used.  Otherwise if environment variable @env{HOME} is set, its value is used.  After those two user-controllable settings, R tries to find system-defined home directories.  It first tries to use the Windows \"personal\" directory (typically @file{C:\\Users\\username\\Documents}).  If that fails, if both environment variables @env{HOMEDRIVE} and @env{HOMEPATH} are set (and they normally are), the value is @file{$@{HOMEDRIVE@}$@{HOMEPATH@}}.  If all of these fail, the current working directory is used."
msgstr "home directory는 다음과 같이 설정되어 있습니다 : 만약, environment variable @env{R_USER}가 설정되어 있다면, 그 것의 값들은 사용되어집니다. environment variable @env{HOME}으로 설정되어 있지만 않다면, 그 것의 값은 사용되어집니다. 이러한 두 user-controllable 설정을 한 이후, R은 home directories들로 정의된 시스템 찾기를 시작합니다. 그 것을 먼저 윈도우즈 \"personal\" directory(일반적으로 윈도우즈 XP의 directory는 @file{C:\\Documents and Settings\\username\\My Documents} 이고, 윈도우즈 vista와 7의 diretory는 @file{C:\\Users\\username\\Documents 입니다}) 사용을 시도합니다. 만약 이것이 실패했을때, 두 environment variables @env{HOMEDRIVE}, @env{HOMEPATH}가 설정되어있기만 한다면, 그 값은 @file{$@{HOMEDRIVE@}$@{HOMEPATH@}}입니다. 위의 모든것들이 실패했다면, 현제 working directory가 사용됩니다."
#
#. type: Plain text
msgid "You can find this from R code by @code{Sys.getenv(\"R_USER\")} or @code{normalizePath(\"~\")}, @samp{~} being Unix notation for the home directory."
msgstr "사용자는 R 코드 @code{Sys.getenv(\"R_USER\")} 혹은 @code{normalizePath(\"~\")}를 이용하여 이것을 찾을수 있습니다. home directory에 대하여 @samp{~}는 Unix notation 입니다."
#
#. type: Plain text
msgid "Environment variables can be set for @command{Rgui.exe} and @command{Rterm.exe} in three different ways."
msgstr "@command{Rgui.exe}와 @command{Rterm.exe}에 대한 환경변수는 세가지 다른 방법들을 통해 설정될 수 있습니다"
#
#. type: enumerate
msgid "On the command line as name=value pairs.  For example in the shortcut to @command{Rgui} you could have"
msgstr ""
#
#. type: example
#, no-wrap
msgid "\"path_to_R\\bin\\x64\\Rgui.exe\" HOME=p:/ R_LIBS=p:/myRlib\n"
msgstr ""
#
#. type: enumerate
msgid "In an environment file @file{.Renviron} in the working directory or in your home directory, for example containing the line"
msgstr ""
#
#. type: example
#, no-wrap
msgid "R_LIBS=p:/myRlib\n"
msgstr ""
#
#. type: enumerate
msgid "If you have permission to do so, you can also create an environment file @file{etc\\Renviron.site} and set environmental variables in that file in the same way.  This is useful for variables which should be set for all users and all usages of this R installation.  (Their values can be overridden in a @file{.Renviron} file or on the command line.)"
msgstr "만약 사용자가 이것을 하기 위한 permission을 가지고 있다면, environment file '@file{etc/Renviron.site}를 생성할 수 있고, 그 파일 안의 환경변수들도 같은 방법으로 설정할 수 있다. 이 것은 모든 유저에 대한 설정과 R installation를 위한 변수들에 대해 유용합니다. 그것들에 값들은 '@file{.Renviron}'파일 혹은 command line에서 중단 될 수 있다."
#
#. type: enumerate
msgid "See @code{?Startup} for more details of environment files."
msgstr "environment 파일들에 대한 세부 정보들은 @code{?Startup}에서 볼수 있습니다."
#
#. type: enumerate
msgid "For all applications via Windows.  How you set an environment variable is system-specific: under recent versions of Windows, go to `User Accounts' in the Control Panel, and select your account and then `Change my environment variables'."
msgstr ""
#
#. type: Plain text
msgid "The order of precedence for environmental variables is the order in which these options are listed, that is the command line then @file{.Renviron} then the inherited environment."
msgstr "환경 변수에 대한 우선 순위는 옵션(이것은 command line입니다)들이 나열되어 있는 순서입니다. comman line 다음에 '@file{.Renviron}', 그 다음 inherited environment 등의 순서입니다."
#
#. type: section
#, no-wrap
msgid "R can't find my file, but I know it is there!"
msgstr ""
#
#. type: Plain text
msgid "How did you specify it? Backslashes have to be doubled in R character strings, so for example one needs @samp{\"d:\\\\3.2.0 Under development (unstable)\\\\library\\\\xgobi\\\\scripts\\\\xgobi.bat\"}.  You can make life easier for yourself by using forward slashes as path separators: they do work under Windows.  You should include the file extension (e.g.@: @samp{\"xgobi.bat\"} rather than just @samp{\"xgobi\"}); sometimes this isn't shown in Windows Explorer, but it is necessary in R."
msgstr "사용자는 어떻게 그것을 구체적으로 명시하나요? 두개의 Backslashe가 R character strings에 있어야합니다. 그래서 예를 들면 하나는 @samp{\"d:\\R-2.15.0\\library\\xgobi\\scripts\\xgobi.bat\"}을 필요로 합니다. 사용자는 앞의 슬래쉬들을 path separators로 사용합으로써 보다 쉽게 작업할 수 있습니다. 그들을 윈도우 운영체제에서 작동됩니다. 사용자는 file extension(예를 들면, 그냥 @samp{xgobi} 보다는 @samp{xgobi.bat}이 좋습니다)을 포함해야만 합니다. 어쩌다가 이것은 윈도우즈 익스플로러에서 볼수 없을수도 있지만, R은 이것을 필요로 합니다."
#
#. type: Plain text
msgid "A simple way to avoid these problems is to use the function @code{file.choose()} to invoke the standard Windows file selection dialog.  If you select a file there, the name will be passed to R in the correct format."
msgstr "이러한 문제점들을 피하기 위한 간단한 방법으로는 standard Windows file selection dialog 를 실행하기 위한 function, @code{file.choose()}를 사용하십시오. 만약 사용자가 저곳에 있는 파일 하나를 선택하였다면, 그 이름은 R이 요구하는 정확한 포맷이 될것입니다."
#
#. type: Plain text
msgid "Another possible source of grief is spaces in folder names.  We have tried to make R work on paths with spaces in, but many people writing packages for Unix do not bother.  So it is worth trying the alternative short name (something like @samp{PROGRA~1}; you can get it as the `MS-DOS name' from the Properties of the file on some versions of Windows, and from @command{dir /X} in a @samp{Command Prompt} window), and using the function @code{shortPathName} from R code."
msgstr "또 다른 문제점으로는 폴더이름의 공간입니다. 우리는 R이 space를 가진 paths에서 실행하는 것을 시도해오고 있지만, Unix의 패키지를 작성하는 많은 사람들을 우리의 노력을 신경쓰지 않습니다. 그러므로, 대체 가능한 짧은 이름과 R 코드인 function @code{shortPathName}을 사용하는 것은 의미있습니다. 짧은 이름의 예로는 @samp{PROGRA~1} 있습니다. 사용자는 이것을 'MS-DOS name'으로써 몇몇 버전의 윈도우즈에 있는 파일의 Properties와 @samp{Command Prompt} 창의 @command{dir /X}으로부터 얻을수 있습니다. "
#
#. type: Plain text
msgid "Not when R itself is running."
msgstr "R 자신혼자 실행되고 있을때는 Registry를 사용하진 않습니다."
#
#. type: Plain text
msgid "When you run the R installer, there are options (under @samp{Select Additional Tasks}) to @samp{Save version number in registry} and (for Administrator installs) @samp{Associate R with .RData files}."
msgstr "사용자가 R installer를 실행 시킬때, @samp{Select Additional Tasks} 아래 @samp{Save version number in registry}와 @samp{Associate R with .RData files} 있습니다."
#
#. type: Plain text
msgid "If you tick the first option, the following string entries are added to the Windows registry:"
msgstr "만약 사용자가 첫번째 옵션을 선택한다면, 이후의 string entries들을 Windows registry 에 더해집니다."
#
#. type: code{#1}
#, no-wrap
msgid "HKEY_LOCAL_MACHINE\\Software\\R-core\\R\\Current Version"
msgstr ""
#
#. type: itemize
msgid "contains the version number, currently 3.2.0 Under development (unstable)."
msgstr "은 현재버전의 currently 3.2.0 Under development (unstable)을 포함하고 있습니다."
#
#. type: code{#1}
#, no-wrap
msgid "HKEY_LOCAL_MACHINE\\Software\\R-core\\R\\[version]\\InstallPath"
msgstr ""
#
#. type: itemize
msgid "(where @code{[version]} is currently 3.2.0 Under development (unstable)) contains the path to the R home directory."
msgstr "(where @code{[version]} is currently 3.2.0 Under development (unstable))은 R home directory의 경로를 포함합니다."
#
#. type: Plain text
msgid "If you do not have administrative privileges on the machine while running the installer, then the entries are created under @code{HKEY_CURRENT_USER}.  The same entries are also created under @code{Software\\R-core\\R32} or @code{Software\\R-core\\R64}, for 32- and 64-bit R respectively."
msgstr "만약, 사용자가 installer를 실행하고 있는 동안 관리자 권한을 가지고 있지 않다면, entries는 @code{HKEY_CURRENT_USER}에 생성됩 니다. 동일한 entries는 32 와 64 비트 R 각각 @code{Software\\R-core\\R32} 혹은 @code{Software\\R-core\\R64}에 생성됩니다."
#
#. type: Plain text
msgid "If you tick the second option (shown with administrative privileges only) (@samp{Associate R with .RData files}) then entries are created under @code{HKEY_CLASSES_ROOT\\.RData} and @code{HKEY_CLASSES_ROOT\\RWorkspace}."
msgstr "만약 두번째 옵션을 (shown with administrative privileges only) (@samp{Associate R with .RData files})을 체크표시 했다면, entries들은 @code{HKEY_CLASSES_ROOT\\.RData} 와 @code{HKEY_CLASSES_ROOT\\RWorkspace}에 생성됩니다."
#
#. type: Plain text
msgid "After installation you can add the Registry entries by running @code{RSetReg.exe} in a sub-folder of the @code{bin} folder, and remove them by running this with argument @code{/U}.  Note that this requires administrative privileges unless run with argument @code{/Personal} and neither sets up nor removes the file associations."
msgstr "사용자는 installation 이후에 sub-folder(@code{bin} 폴더안의)에 있는 @code{RSetReg.exe}를 실행함으로써 Registry entries들을 추가할수 있고, argument @code{/U}를 실행함으로 제거할 수 있습니다. 중요한 것은 만약 argument @code{Personal}과 함께 실행하지 않거나, file associations을 제거혹은 설정하지만 않는 다면, 이것은 관리자 권한을 요구한다는 것입니다."
#
#. type: section
#, no-wrap
msgid "Does R support automation (OLE, COM)?"
msgstr ""
#
#. type: Plain text
msgid "Directly, no.  See packages such as @code{RDCOMClient} from @uref{http://www.omegahat.org/} and the non-Free project at @uref{http://www.statconn.com/}."
msgstr ""
#
#. type: Plain text
msgid "for example @code{update.packages()} and the menu items on the Packages menu."
msgstr "예를 들면, @code{update.packages()}와 packages menu위의 menu items 등이 있습니다."
#
#. type: Plain text
msgid "We have had several reports of this, although they do work for us on @emph{all} of our machines.  There are two known possible fixes."
msgstr "그들이 우리의 @emph{모든 기계들}을 위해 일함에도 불구하고, 우리는 대한 몇개의 보고서들을 가지고 있습니다. 다음은 두개의 가능한 개선책입니다."
#
#. type: Plain text
msgid "(a) Use the Windows internet functions by starting R with the flag @option{--internet2} (@pxref{How do I install R for Windows?})  or calling @code{setInternet2(TRUE)} or setting the environment variable @env{R_WIN_INTERNET2} to a non-empty value when starting R.  These cause R to use the OS's functions used by Internet Explorer, which may already be configured for use with proxies.  Note that this does @emph{not} work with proxies that need authentication."
msgstr ""
#
#. type: Plain text
msgid "(b) A proxy needs to be set up: see @code{?download.file}.  Here are two versions of an example (a real one, but from a machine that is only available locally) of a command-line in a short cut:"
msgstr "(b) 프록시는 설정해주 어야지만 사용할수 있습니다. @code{?download.file}을 보십시오. 여기 바로가기에 있는 command-line에 대한 예들의 두가지 버전 있습니다."
#
#. type: example
#, no-wrap
msgid ""
"\"path_to_R\\bin\\x64\\Rgui.exe\" http_proxy=http://user:pass@@gannet:80/\n"
"\n"
msgstr ""
#
#. type: example
#, no-wrap
msgid "\"path_to_R\\bin\\x64\\Rgui.exe\" http_proxy=http://gannet/ http_proxy_user=ask\n"
msgstr ""
#
#. type: Plain text
msgid "The second version will prompt the user for the proxy username and password when HTTP downloads are first used."
msgstr "두번째 버전은 HTTP downloads가 처음으로 실행 될 때, 사용자가 프록시 유저네임과 비밀번호를 갖도록 유도합니다."
#
#. type: Plain text
msgid "Another possibility is that firewall settings are blocking the R executables from contacting the Internet, but this should result in informative error messages from the firewall program."
msgstr "다른 가능성들은 방화벽 설정이 R executables를 contacting과 인터넷으로 부터 차단을 할 수 있다는 것입니다. 하지만, 이것은 방화벽 프로그램으로부터 비공식적인 에러 메시지를 발생시킵니다."
#
#. type: Plain text
msgid "This has not been reported for a few years, but used to happen regularly.  All the occurrences we have solved have been traced to faulty versions of @samp{msvcrt.dll}: we have installed a workaround that seems to avoid this.  A few other people have discovered this was caused by desktop switcher and keyboard macro programs, for example `Macro Magic' and `JS Pager'."
msgstr ""
#
#. type: Plain text
msgid "This is a @emph{warning} which indicates that R has taken action to correct the action of some (non-R) DLL which has just been loaded and has changed the floating point control word (in its initialization code)  to a setting incompatible with that needed for R.  This is not good practice on the part of the DLL, and often indicates that it needs to be updated."
msgstr ""
#
#. type: Plain text
msgid "Unfortunately, because DLLs may themselves load other DLLs it is not possible for R to track which DLL caused the problem."
msgstr ""
#
#. type: Plain text
msgid "See also @code{?dyn.load}."
msgstr ""
#
#. type: Plain text
msgid "Some users have found that @code{Rgui.exe} fails to start, exiting with a ``Floating-point invalid operation'' or other low level error.  This error may also happen in the middle of a session.  In some cases where we have tracked this down, it was due to bugs in the video driver on the system in question: it makes changes to the floating point control word which are incompatible with R.  (Good practice would restore the control word to the state it was in when the driver code was called, and R tries hard to correct this before running its own code.)  For example, one user reported that the virtual screen manager JSP2 caused this crash."
msgstr ""
#
#. type: Plain text
msgid "These errors are essentially impossible for us to fix or work around beyond the measures already taken.  The only solution we know of is for the user to replace the buggy system component that is causing the error."
msgstr ""
#
#. type: Plain text
msgid "This is a misreading of Windows' confusing Task Manager.  R's computation is single-threaded, and so it cannot use more than one CPU.  What the task manager shows is not the usage in CPUs but the usage as a percentage of the apparent total number of CPUs.  We say `apparent' as it treats so-called `hyper-threaded' CPUs such as two CPUs per core, and most modern CPUs have at least two cores."
msgstr ""
#
#. type: Plain text
msgid "You can see how many `CPU's are assumed by looking at the number of graphs of `CPU Usage History' on the `Performance' tab of the Windows Task manager."
msgstr ""
#
#. type: section
#, no-wrap
msgid "Does R run under Windows Vista/7/8/Server 2008?"
msgstr ""
#
#. type: Plain text
msgid "It does.  A few issues have been reported that are related to the way accounts and file permissions work.  (These are not specifically R issues, but changes in user experiences.)"
msgstr ""
#
#. type: Plain text
msgid "Earlier versions of Windows had user and Administrator accounts, and user accounts could be give administrative privileges (by being added to the local Administrators group) and so write permission over system areas such as @file{c:\\Program Files}.  R would be installed either by a user in his own file space or by an account with administrator privileges into a system area.  Sysadmins could set policies for user accounts, and you might for example have needed to be a `Power User' to install software at all."
msgstr ""
#
#. type: Plain text
msgid "Vista and later normally disable the Administrator account and expect software installation to be done by an account which is in the local Administrator group with `admin approval mode' turned on.  (The Administrator account by default has it turned off.)  Unlike (say)  Windows XP, such accounts do not run programs with full administrator privileges, and this is where the issues arise.  (For background information consult e.g.@: @url{http://windowsvistablog.com/@/blogs/@/windowsvista/@/archive/@/2007/01/23/@/security-features-vs-convenience.aspx}.)  These OSes have the concept of `over-the-shoulder' credentials: if you are running without full administrator privileges and do something which needs them you may be prompted with one or more security-check dialog boxes, and may be required to provide administrator credentials or confirm that you really want to take that action."
msgstr ""
#
#. type: Plain text
msgid "Vista and later will report that the R installer has an `unidentified publisher' or `unknown publisher' and ask if it should be run.  System administrators can disable installing applications from non-trusted sources, in which case you will have to persuade them that R is trustworthy, or digitally sign the R installer yourself, or (unless this is also disabled) run the installer from a standard account and install into your own file area.  (The same issues apply to the @file{.msi} version of the installer.)"
msgstr ""
#
#. type: Plain text
msgid "If you install R as a standard user into your own file space and use it under the same account, there are no known permission issues."
msgstr ""
#
#. type: Plain text
msgid "If you use the default Administrator account (without `admin approval mode' being turned on) and install/update packages (in the system area or elsewhere), no issues are known."
msgstr ""
#
#. type: Plain text
msgid "If you use an account in the local Administrators group in `admin approval mode' (which is the intended norm under these OSes), installation will make use of `over-the-shoulder' credentials.  You will run into problems if you try installing (including updating) packages in the main R library.  (It would be nice if at that point R could use over-the-shoulder credentials, but they apply to processes as a whole.  Vista and later disallow creating @code{.dll} files in the system area without credentials.)  There are several ways around this."
msgstr ""
#
#. type: itemize
msgid "Run R with Administrator privileges in sessions where you want to install packages.  (Do so by right-clicking on the R shortcut and selecting 'Run as Administrator'.)"
msgstr ""
#
#. type: itemize
msgid "Transfer ownership of the R installation to the user which installed R.  To do so, use the security tab on the @samp{Properties} of the top-level R folder and give `Full Control' over this directory to the user (not just the Administrator group)."
msgstr ""
#
#. type: itemize
msgid "Install packages into a different library tree owned by the account used to install R."
msgstr ""
#
#. type: itemize
msgid "For an installation to be used by a single user, the simplest way is to make use of a `personal library': @xref{I don't have permission to write to the 3.2.0 Under development (unstable)\\library directory}."
msgstr ""
#
#. type: itemize
msgid "For a site installation, you can create a site-wide library directory anywhere convenient, and add it to the default package search path for all users via @env{R_LIBS_SITE} in @file{etc\\Renviron.site}.  @xref{What are HOME and working directories?}.  There is a standard location for a site library, the @file{site-library} directory in the top-level R folder (which you would need to create with full control for the R installation account).  This will be used for installation in preference to the main library folder if it exists."
msgstr ""
#
#. type: itemize
msgid "This approach will not allow you to update the recommended packages unless you `Run as administrator': we suggest you use an R session running under Administrator privileges when updating those."
msgstr ""
#
#. type: Plain text
msgid "Another issue with Vista was that the standard POSIX ways that R uses (e.g.@: in @code{file.info} and @code{file.access}) to look at file permissions no longer work reliably.  @code{file.access} was re-written to work with Windows NT-based security and the new version seems much more reliable with these OSes (but still not 100% correct)."
msgstr ""
#
#. type: Plain text
msgid "On suitably recent hardware Vista and later can prevent the execution of code from data areas via `Data Execution Prevention' (from a tab in System Properties -> Advanced -> Performance), and sysadmins can turn this on for all programs.  R runs correctly with DEP enabled."
msgstr ""
#
#. type: section
#, no-wrap
msgid "Quotes don't come out right on the console/terminal/pager."
msgstr ""
#
#. type: Plain text
msgid "R may make use of directional quotes that are not always rendered correctly by Windows: these are used by default only by @code{Rgui} in suitable locales (not Chinese/Japanese/Korean)."
msgstr ""
#
#. type: Plain text
msgid "Whether these are used in R output (from functions @code{sQuote} and @code{dQuote}) is controlled by @code{getOption(\"useFancyQuotes\")} whose default is @code{FALSE} except for the @code{Rgui} console.  There are two potential problems with rendering directional quotes.  The first is with running @code{Rterm}: in European locales the `Windows Command Prompt' is by default set up to use MS-DOS and not Windows default encodings: this can be changed via @command{chcp}, with @command{chcp 1252} being appropriate for Western European (including English)  locales.  The other is that the default raster fonts only include directional single quotes and not directional double quotes (which will probably be rendered as a filled rectangle)."
msgstr ""
#
#. type: Plain text
msgid "Directional quotes will also be used in text help which is normally displayed in R's internal pager: these may not be rendered correctly in an external pager.  They are also used in HTML help, where most browsers use fonts which render them correctly."
msgstr ""
#
#. type: Plain text
msgid "The font used can affect whether quotes are rendered correctly.  The default font in the @code{Rgui} console and internal pager is @code{Courier New}, which has directional quotes on all the systems we tried.  @code{Lucida Console} which has elegant glyphs for directional quotes (but seems rather light unless ClearType is in use): @code{Consolas} is another font which we often select when ClearType is in use.  Non-TrueType fonts such as @code{Courier} and @code{FixedSys} lack directional double quotes on the systems we tried."
msgstr ""
#
#. type: Plain text
msgid "There is a related problem with using @code{Sweave} output in @code{Rgui}, for LaTeX needs to be told about the encoding of directional quotes by including in the LaTeX preamble e.g.@: (for a Western European locale)"
msgstr ""
#
#. type: example
#, no-wrap
msgid "\\usepackage[cp1252]@{inputenc@}\n"
msgstr ""
#
#. type: Plain text
msgid "or their use suppressed by @code{options(useFancyQuotes=FALSE)}."
msgstr ""
#
#. type: section
#, no-wrap
msgid "There is no tilde on my keyboard!"
msgstr ""
#
#. type: Plain text
msgid "Where tilde does not appear on the main keyboard, it can normally be accessed by pressing AltGr (the right Alt key) plus some other key.  This is @code{]} in Canadian (multilingual), German and Scandinavian layouts, @code{1} in Eastern Europe, @code{[} in Portuguese, @code{4} or @code{5} in Spanish, @code{/} in Francophone Belgian, and so on.  For some keyboards the uses of AltGr are shown at @url{http://office.microsoft.com/@/en-us/@/word/@/HP052590631033.aspx}: you can explore those for your keyboard via the `On-Screen Keyboard' (under Ease of access on Windows 7)."
msgstr ""
#
#. type: Plain text
msgid "On all Windows versions you should be able to get tilde by holding the down the left Alt key and typing 0126 on the numeric keypad (if you have one), then releasing the Alt key."
msgstr ""
#
#. type: Plain text
msgid "The 32-bit build of R for Windows will run on both 32-bit and 64-bit@footnote{what Windows calls x64 for x86-64 CPUs, not the very rare ia64 Windows for Itanium CPUs.} versions of Windows.  64-bit versions of Windows run 32-bit executables under the WOW (Windows on Windows) subsystem: they run in almost exactly the same way as on a 32-bit version of Windows, except that the address limit for the R process is 4GB (rather than 2GB or perhaps 3GB)."
msgstr ""
#
#. type: Plain text
msgid "When R is installed on 64-bit Windows there is the option of installing 32- and/or 64-bit builds: the default is to install both. If you are using the 32-bit build, replace @samp{x64} by @samp{i386} in the examples in this FAQ."
msgstr ""
#
#. type: Plain text
msgid "Obviously, only relevant if you are using 64-bit Windows."
msgstr ""
#
#. type: Plain text
msgid "For most users we would recommend using the `native' build, that is the 32-bit version on 32-bit Windows and the 64-bit version of 64-bit Windows."
msgstr ""
#
#. type: Plain text
msgid "The advantage of a native 64-bit application is that it gets a 64-bit address space and hence can address far more than 4GB (how much depends on the version of Windows, but in principle 8TB).  This allows a single process to take advantage of more than 4GB of RAM (if available) and for R's memory manager to more easily handle large objects (in particular those of 1GB or more).  The disadvantages are that all the pointers are 8 rather than 4 bytes and so small objects are larger and more data has to be moved around, and that less external software is available for 64-bit versions of the OS. The 64-bit compilers are able to take advantage of extra features of all x86-64 chips (more registers, SSE2/3 instructions, @dots{}) and so the code may run faster despite using larger pointers.  The 64-bit build is nowadays usually slightly faster than the 32-bit build on a recent CPU (Intel Core 2 or later or AMD equivalent)."
msgstr ""
#
#. type: Plain text
msgid "For advanced users the choice may be dictated by whether the contributed packages needed are available in 64-bit builds (although CRAN only offers 32/64-bit builds).  The considerations can be more complex: for example 32/64-bit @code{RODBC} need 32/64-bit ODBC drivers respectively, and where both exist they may not be able to be installed together.  An extreme example is the Microsoft Access/Excel ODBC drivers: if you have installed 64-bit Microsoft Office you can only install the 64-bit drivers and so need to use 64-bit @code{RODBC} and hence R.  (And similarly for 32-bit Microsoft Office.)"
msgstr ""
#
#. type: Plain text
msgid "Obviously, only relevant if the machine is running a 64-bit version of Windows -- simply select both when using the installer.  You can also go back and add 64-bit components to a 32-bit install, or @emph{vice versa}."
msgstr ""
#
#. type: Plain text
msgid "For many Registry items, 32- and 64-bit programs have different views of the Registry, but clashes can occur.  The most obvious problem is the file association for @file{.RData} files, which will use the last installation for which this option is selected, and if that was for an installation of both, will use 64-bit R.  To change the association the safest way is to edit the Registry entry @samp{HKEY_CLASSES_ROOT\\RWorkspace\\shell\\open\\command} and replace @samp{x64} by @samp{i386} or @emph{vice versa}."
msgstr ""
#
#. type: Plain text
msgid "This has often been reported after an upgrade."
msgstr ""
#
#. type: Plain text
msgid "The R installer does not put @command{Rcmd.exe} (nor any other R executable) on your @env{PATH}.  What seems to have happened is that people did this for themselves in the past, upgraded R (which by default will install to a different location) and un-installed the old version of R.  If you do that (or install R for the first time), you need to edit the @env{PATH}."
msgstr ""
#
#. type: Plain text
msgid "The element you want to add to the path is something like"
msgstr ""
#
#. type: example
#, no-wrap
msgid "c:\\Program Files\\R\\R-3.1.0\\bin\\x64\n"
msgstr ""
#
#. type: Plain text
msgid "for 64-bit @command{Rcmd.exe}, replacing @code{x64} by @code{i386} for 32-bit."
msgstr ""
#
#. type: Plain text
msgid "How you set the path depends on your OS version.  Under recent versions, go to `User Accounts' in the Control Panel, and select your account and then `Change my environment variables'.  (System policies can prevent end users making changes.)"
msgstr ""
#
#. type: Plain text
msgid "An alternative is to set the @env{PATH} in the shell you are running (@command{Rcmd.exe} is a command-line program).  For those using the standard Windows `Command Prompt' Duncan Murdoch suggested:"
msgstr ""
#
#. type: Plain text
msgid "The simple way to do it just for the command prompt is to write a little batch file @command{setpath.bat} containing"
msgstr ""
#
#. type: example
#, no-wrap
msgid "set PATH=newstuff;%PATH%\n"
msgstr ""
#
#. type: Plain text
msgid "and then run @command{cmd} with"
msgstr ""
#
#. type: example
#, no-wrap
msgid "CMD /K setpath.bat\n"
msgstr ""
#
#. type: node
#, no-wrap
msgid "The installer does not offer my language"
msgstr ""
#
#. type: node
#, no-wrap
msgid "I want R in English!"
msgstr ""
#
#. type: node
#, no-wrap
msgid "I want to run R in Chinese/Japanese/Korean"
msgstr ""
#
#. type: node
#, no-wrap
msgid "I selected English for installation but R runs in Chinese"
msgstr ""
#
#. type: node
#, no-wrap
msgid "I would like to be able to use Japanese fonts"
msgstr ""
#
#. type: node
#, no-wrap
msgid "I don't see characters with accents at the R console"
msgstr ""
#
#. type: node
#, no-wrap
msgid "The dialog buttons are not translated"
msgstr ""
#
#. type: section
#, no-wrap
msgid "The installer does not offer my language."
msgstr ""
#
#. type: Plain text
msgid "Only a limited range of languages is supported, currently Catalan, both Simplified and Traditional Chinese, Czech, Danish, Dutch, Finnish, French, German, Greek, Hebrew, Hungarian, Italian, Japanese, Korean, Norwegian, Polish, Portuguese (Brazil), Portuguese (Portugal), Russian, Slovenian, Spanish (Spain)  and Ukranian."
msgstr ""
#
#. type: section
#, no-wrap
msgid "I want R in English (and not in French/Chinese/...)!"
msgstr ""
#
#. type: Plain text
msgid "The default behaviour of R is to try to run in the language you run Windows in."
msgstr ""
#
#. type: Plain text
msgid "Apparently some users want@footnote{or they may have no choice: apparently some Windows editions are tied to a specific language.} Windows in their native language, but not R.  To do so, set @code{LANGUAGE=en} as discussed in Q2.2 and Q2.15, or in the @file{Rconsole} file."
msgstr ""
#
#. type: section
#, no-wrap
msgid "I want to run R in Chinese/Japanese/Korean."
msgstr ""
#
#. type: Plain text
msgid "Suitable versions of Windows support what it calls `East Asian' languages, but e.g.@: Western installations of Windows often do not have such support.  So we need to assume that your copy of Windows does."
msgstr ""
#
#. type: Plain text
msgid "Both @command{Rterm.exe} and @command{Rgui.exe} support single- and double-width characters.  It will be necessary to select suitable fonts in files @file{Rconsole} and @file{Rdevga} (see @code{?Rconsole} or the comments in the files: the system versions are in the @file{etc} folder); in the latter you can replace @code{Arial} by @code{Arial Unicode MS}, and we tried @code{FixedSys} and @code{MS Mincho} in @file{Rconsole}.  (Note that @file{Rdevga} only applies to Windows graphics devices and not, say, to @code{pdf}.)"
msgstr ""
#
#. type: Plain text
msgid "Note that it is important that the console font uses double-width characters for all CJK characters (as that is what the width table used assumes): this is true for the fonts intended for CJK locales but not for example for @code{Lucida Console} or @code{Consolas}."
msgstr ""
#
#. type: Plain text
msgid "You do need to ensure that R is running in a suitable locale: use @code{Sys.getlocale()} to find out.  (CJK users may be used to their language characters always being available, which is the case for so-called `Unicode' Windows applications.  However, R is primarily written for Unix-alikes and is not therefore `Unicode' in the Windows sense.)  You can find suitable locale names from @uref{http://msdn.microsoft.com/@/library/@/default.asp?url=/@/library/@/en-us/@/vccore98/@/html/@/_crt_language_and_country_strings.asp}: beware that @code{\"Chinese\"} is Traditional Chinese (code page 950, Big5) and @code{\"chs\"} is needed for Simplified Chinese (code page 936, GB2312)."
msgstr ""
#
#. type: Plain text
msgid "When using @command{Rterm} the window in which it is run has to be set up to use a suitable font (e.g. @code{Lucida Console} or @code{Consolas}, not the OEM raster fonts) and a suitable codepage (which for the Windows Cmd shell can be done using @command{chcp})."
msgstr ""
#
#. type: section
#, no-wrap
msgid "I selected English for installation but R runs in Chinese."
msgstr ""
#
#. type: Plain text
msgid "Precisely, you selected English @strong{for installation}! The language of the installer has nothing to do with the language used to run R: this is completely standard Windows practice (and necessary as different users of the computer may use different languages)."
msgstr ""
#
#. type: Plain text
msgid "The language R uses for menus and messages is determined by the @emph{locale}: please read the appropriate manual (`R Installation and Administration') for the details.  You can ensure that R uses English messages by appending @code{LANGUAGE=en} to the shortcut you use to start R, or setting it in the @file{Rconsole} file."
msgstr ""
#
#. type: section
#, no-wrap
msgid "I would like to be able to use Japanese fonts."
msgstr ""
#
#. type: Plain text
msgid "for example, in the console and to annotate graphs.  Similar comments apply to any non-Western-European language."
msgstr ""
#
#. type: Plain text
msgid "With suitable fonts, this should just work.  You will need to set MS Mincho or MS Gothic as the console font to ensure that single- and double-width characters are handled correctly.  The default graphics fonts for the @code{windows()} graphics device can handle most common Japanese characters, but more specialized fonts may need to be set.  (See Q5.2 for how to set fonts: the console font can also be set from the `GUI preferences' menu item.)  The help for @code{windowsFonts} has examples of selecting Japanese fonts for the @code{windows()} family of devices."
msgstr ""
#
#. type: Plain text
msgid "In addition, the Hershey vector fonts (see @code{?Hershey}, @code{?Japanese} and @code{demo(Japanese)}) can be used on any graphics device to display Japanese characters."
msgstr ""
#
#. type: Plain text
msgid "To use non-Latin-1 characters in the @code{postscript} graphics device, see its help page (which also applies to @code{pdf})."
msgstr ""
#
#. type: section
#, no-wrap
msgid "I don't see characters with accents at the R console, for example in ?text."
msgstr ""
#
#. type: Plain text
msgid "You need to specify a font in @file{Rconsole} (see Q5.2) that supports the encoding in use.  This used to be a problem in earlier versions of Windows, but now it is hard to find a font which does not."
msgstr ""
#
#. type: Plain text
msgid "Support for these characters within @command{Rterm} depends on the environment (the terminal window and shell, including locale and codepage settings) within which it is run as well as the font used by the terminal window.  Those are usually on legacy DOS settings and need to altered."
msgstr ""
#
#. type: section
#, no-wrap
msgid "The dialog buttons are not translated."
msgstr ""
#
#. type: Plain text
msgid "In most cases they actually are, but by Windows.  Setting the locale or the @code{LANGUAGE} environment variable does not change the Windows setting of its `UI language'.  Vista and later talk about the 'UI language' and the 'system locale' for setting the language used for `non-Unicode' programs (on the 'Administrative' tab in Windows 7)."
msgstr ""
#
#. type: Plain text
msgid "If you have Windows running completely in say French or Chinese these settings are likely to be consistent.  However, if you try to run Windows in one language and R in another, you may find the way Windows handles internationalization slightly odd."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I install packages into libraries in this version?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "I don't have permission to write to the 3.2.0 Under development (unstable)\\library directory"
msgstr ""
#
#. type: node
#, no-wrap
msgid "The packages I installed do not appear in the HTML help system"
msgstr ""
#
#. type: node
#, no-wrap
msgid "My functions are not found by the HTML help search system."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Loading a package fails."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Package TclTk does not work."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Hyperlinks in HTML do not work."
msgstr ""
#
#. type: node
#, no-wrap
msgid "update.packages() fails"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I add to the list of repositories?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Help is not shown for some of the packages"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I get static HTML pages?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How can I get a binary version of a package?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Package xxx is out of date for Windows"
msgstr ""
#
#. type: node
#, no-wrap
msgid "No binary packages appear to be available for my version of R"
msgstr ""
#
#. type: section
#, no-wrap
msgid "How do I build my package for both 32- and 64-bit R?"
msgstr ""
#
#. type: Plain text
msgid "Yes, but you will need a lot of tools to do so, unless the author or the maintainers of the @file{bin/windows/contrib} section on CRAN have been kind enough to provide a binary version for Windows as a @code{.zip} file, or the package is a simple one involving no compiled code (and binary versions are usually available for simple packages)."
msgstr ""
#
#. type: Plain text
msgid "You can install binary packages either from a repository such as CRAN or from a local @code{.zip} file by using @code{install.packages}: see its help page.  There are menu items on the @code{Packages} menu to provide a point-and-click interface to package installation.  The packages for each minor (3.x.?) version will be stored in a separate area, so for R 3.1.? the files are in @file{bin/windows/contrib/3.1}."
msgstr ""
#
#. type: Plain text
msgid "Note that the binary versions on CRAN are unsupported: see @uref{http://cran.r-project.org/@/bin/@/windows/@/contrib/@/3.1/@/ReadMe}, which also gives the locations of a few other binary packages."
msgstr ""
#
#. type: Plain text
msgid "If there is no binary package or that is not up-to-date or you prefer compiling from source, read the `R Installation and Administration' manual section on `Add-on Packages'.  Source packages which contain no C/C++/Fortran code which needs compilation can simply be installed by @code{install.packages(type = \"source\")} or @command{R CMD INSTALL pkgname} at a Windows command prompt.  For packages with code that needs compilation you will need to collect and install several tools: you can download them via the portal at @uref{http://www.murdoch-sutherland.com/Rtools/}.  Once you have done so, just run @command{R CMD INSTALL pkgname} at a Windows command prompt.  To check the package (including running all the examples on its help pages and in its test suite, if any) use @command{R CMD check pkgname}: see the @emph{`Writing R Extensions'} manual."
msgstr ""
#
#. type: Plain text
msgid "Note that setting up Windows to install a source package that needs compilation is rather tricky; please do ensure that you have followed the instructions @strong{exactly}.  At least 90% of the questions asked are because people have not done so."
msgstr ""
#
#. type: Plain text
msgid "If you have a source package that is known to work on a Unix-alike system, you can try the automated Windows binary package builder documented at @url{http://win-builder.r-project.org}."
msgstr ""
#
#. type: section
#, no-wrap
msgid "I don't have permission to write to the @file{3.2.0 Under development (unstable)\\library} directory."
msgstr ""
#
#. type: Plain text
msgid "You can install packages anywhere and use the environment variable @env{R_LIBS} (@pxref{How do I set environment variables?}) to point to the library location(s)."
msgstr ""
#
#. type: Plain text
msgid "Suppose your packages are installed in @file{p:\\myRlib}.  Then you can EITHER"
msgstr ""
#
#. type: example
#, no-wrap
msgid "set the environment variable R_LIBS to p:/myRlib before starting R\n"
msgstr ""
#
#. type: Plain text
msgid "OR use a package by, e.g.@:"
msgstr ""
#
#. type: example
#, no-wrap
msgid "library(mypkg, lib.loc=\"p:/myRlib\")\n"
msgstr ""
#
#. type: Plain text
msgid "You can also have a personal library, which defaults to the directory @file{R\\win-library\\@var{x.y}} of your home directory for versions @var{x.y.z} of R.  This location can be changed by setting the environment variable @env{R_LIBS_USER}, and can be found from inside R by running @code{Sys.getenv(\"R_LIBS_USER\")}.  This will only be used if it exists so you may need to create it: you can use"
msgstr ""
#
#. type: example
#, no-wrap
msgid "dir.create(Sys.getenv(\"R_LIBS_USER\"), recursive = TRUE)\n"
msgstr ""
#
#. type: Plain text
msgid "to do so.  If you use @code{install.packages} and do not have permission to write to the main or site library, it should offer to create a personal library for you and install the packages there.  This will also happen if @code{update.packages} offers to update packages for you in a library where you do not have write permission."
msgstr ""
#
#. type: Plain text
msgid "There can be additional security issues under Windows Vista and later: @xref{Does R run under Windows Vista?}.  In particular, the detection that a standard user has suitable permissions appears to be unreliable under Vista, so we recommend that you do create a personal directory yourself."
msgstr ""
#
#. type: section
#, no-wrap
msgid "The packages I installed do not appear in the HTML help system."
msgstr ""
#
#. type: Plain text
msgid "This question applied to the pre-2.10.0 HTML help system, which has been replaced."
msgstr ""
#
#. type: Plain text
msgid "This question applied to the pre-2.10.0 search system, which has been replaced."
msgstr ""
#
#. type: Plain text
msgid "Is the package installed for this version of R? Packages need to have prepared for R 2.10.0 or later, and packages containing compiled code for R 2.12.0 or later."
msgstr ""
#
#. type: Plain text
msgid "You can tell the version the package was compiled for by looking at the @samp{Built:} line in its @file{DESCRIPTION} file."
msgstr ""
#
#. type: Plain text
msgid "For a small number of binary packages you need to install additional software and have its DLLs in your @code{PATH}.  Windows will normally give an informative message about a certain DLL not being found.  See @uref{http://cran.r-project.org/@/bin/@/windows/@/contrib/@/3.1/@/ReadMe} for a listing of some of these packages (notably @code{RGtk2}, @code{cairoDevice}, @code{rggobi}, @code{rJava}, @code{rjags} and some of the packages connecting to databases)."
msgstr ""
#
#. type: Plain text
msgid "For package @code{tcltk} to work (try @code{demo(tkdensity)} or @code{demo(tkttest)} after @code{library(tcltk)}) you need to have Tcl/Tk installed.  This part of the R installation, so it should be there."
msgstr ""
#
#. type: Plain text
msgid "However, if you have the environment variable @env{MY_TCLTK} set to a non-empty value, it is assumed that you want to use a different Tcl/Tk 8.5.x installation with the path to its @file{bin} directory given by value of @env{MY_TCLTK}, and that this is set up correctly (with @env{TCL_LIBRARY} set if needed).  Note that you do need 8.5.x and not 8.4.x nor 8.6.0, and you do need the architecture to match, that is a 32-bit or 64-bit build of Tcl/Tk to match the R build in use.  (There is no guarantee that a 64-bit build will work: it depends on the layout it uses.)"
msgstr ""
#
#. type: Plain text
msgid "In the past several package authors have suggested using ActiveTcl (@uref{http://www.activestate.com/@/Products/@/activetcl/}) as a way to get Tcl/Tk extensions (but the support files do contain the most commonly used @code{TkTable} and @code{BWidget} extensions).  This could be used by setting (for a default install)"
msgstr ""
#
#. type: example
#, no-wrap
msgid "MY_TCLTK=c:/Tcl/bin\n"
msgstr ""
#
#. type: Plain text
msgid "@strong{but} current versions do not by default contain any extra extensions (although they may be downloaded via the @code{Teacup} facility) and this only works for 32-bit R."
msgstr ""
#
#. type: section
#, no-wrap
msgid "Hyperlinks in HTML sometimes do not work."
msgstr ""
#
#. type: Plain text
msgid "This question was much more relevant prior to version 2.10.0."
msgstr ""
#
#. type: Plain text
msgid "They may still not work between packages installed in different libraries if the HTTP server has been disabled: the remedy is not to do that!"
msgstr ""
#
#. type: section
#, no-wrap
msgid "@code{update.packages()} fails."
msgstr ""
#
#. type: Plain text
msgid "You may not be able to update a package which is in use: Windows `locks' the package's DLL when it is loaded.  So use @code{update.packages()} (or the menu equivalent) in a new session."
msgstr ""
#
#. type: Plain text
msgid "If you put @code{library(foo)} in your @file{.Rprofile} you will need to start R with @option{--vanilla} to be able to update package @code{foo}.  If you set @env{R_DEFAULT_PACKAGES} to include @code{foo}, you will need to unset it temporarily."
msgstr ""
#
#. type: Plain text
msgid "It has been reported that some other software has interfered with the installation process by preventing the renaming of temporary files, @emph{Google Desktop} being a known example."
msgstr ""
#
#. type: Plain text
msgid "as shown in the @code{Select repositories...} item on the @code{Packages} menu?"
msgstr ""
#
#. type: Plain text
msgid "This reads from the tab-delimited file @file{R_HOME\\etc\\repositories}, which you can edit, or put a modified copy at @file{.R\\repositories} in your HOME directory (@pxref{What are HOME and working directories?})."
msgstr ""
#
#. type: Plain text
msgid "This was about Compiled HTML help, which has not been supported since R 2.10.0."
msgstr ""
#
#. type: Plain text
msgid "We presume you want to do this for some special purpose: R's help system will not make use of them, links across library directories will not work (unlike R < 2.10.0), ambiguous links will be resolved at install time and missing links will be broken (previous versions used JavaScript to look for them at run time).  But if you still want them, here is how to do it."
msgstr ""
#
#. type: Plain text
msgid "Static HTML pages are not part of the binary distribution, so you will need to install R and/or packages from their sources.  To install just a few packages with static HTML pages use"
msgstr ""
#
#. type: example
#, no-wrap
msgid "R CMD INSTALL --html @var{pkg1} @var{pkg2} @dots{}\n"
msgstr ""
#
#. type: Plain text
msgid "To install R itself with static HTML pages you need to build it from the sources for yourself.  Change the following line in file @file{MkRules.local} (after copying @file{MkRules.dist} to @file{MkRules.local} if that has not already been done)."
msgstr ""
#
#. type: example
#, no-wrap
msgid ""
"# set this to YES to build static HTML help\n"
"BUILD_HTML = NO\n"
msgstr ""
#
#. type: Plain text
msgid "and them all packages installed by that build of R will (by default) be installed with static HTML pages."
msgstr ""
#
#. type: Plain text
msgid "Presumably one not available on CRAN, BioC or a similar repository."
msgstr ""
#
#. type: Plain text
msgid "If you have a source package that is known to work on a Unix-alike system, you can try the automated Windows binary package builder documented at @url{http://win-builder.r-project.org}.  If the package is not yours, please remember to change the maintainer address so the results go to you and not the author(s)!"
msgstr ""
#
#. type: Plain text
msgid "However, if a CRAN package is not available in binary form, this usually means that there is a problem with some dependent package or external software (often mentioned in the @file{@@ReadMe} file in the binary repository directory).  You can email @email{R-windows@@r-project.org} expressing a wish for such a package to be ported---the maintainers will take such wishes into account when prioritizing work on binary packages."
msgstr ""
#
#. type: Plain text
msgid "In many cases installing packages from the sources is not at all difficult (especially if the package contains no compiled code), so please attempt that for yourself before requesting help from the busy volunteers."
msgstr ""
#
#. type: Plain text
msgid "Here are three possible reasons:"
msgstr ""
#
#. type: Plain text
msgid "You are simply impatient, and need to wait until the binary package has been built and propagated to the CRAN mirror you are using.  This normally (but not always) happens within 24 hours.  Sometimes mirrors do get behind (especially unofficial ones), so you could try another mirror.  (Mirror statistics are linked near the top of the CRAN mirror page at @uref{http://cran.r-project.org/mirrors.html}.)"
msgstr ""
#
#. type: Plain text
msgid "The latest version of the package might require a later version of R than the one you are using.  You can check on the package's HTML page on CRAN, and update your R if needed."
msgstr ""
#
#. type: Plain text
msgid "Your R might be too old.  Binary packages for the 3.x series are built (if possible) whilst 3.(x+1) is current, but building stops once 3.(x+2)  reaches alpha (pre-release, about a month before release).  You can always try installing from the sources."
msgstr ""
#
#. type: Plain text
msgid "How old is it? The CRAN policy is to archive binary packages two years after the 2.x series is closed.  Other repositories may do so sooner."
msgstr ""
#
#. type: Plain text
msgid "If you are using an R version that old we advise you to update your R, but you do also have the option of installing packages from their source."
msgstr ""
#
#. type: Plain text
msgid "Packages without compiled code nor a @file{configure.win} script will run on both 32- and 64-bit R."
msgstr ""
#
#. type: Plain text
msgid "Packages with compiled code but no @file{configure.win} nor @code{src/Makefile.win} file will be built for both when running on a 64-bit version of Windows if both versions of R are installed."
msgstr ""
#
#. type: Plain text
msgid "An empty @file{configure.win} is treated in the same way as if none existed.  Also, there is a list of packages known to have an architecture-independent @file{configure.win} hardcoded into @command{R CMD INSTALL}, and for these packages, both architectures will be built under the above conditions.  Other packages can be installed with @file{configure.win} run for just the first architecture by using option @option{--force-biarch}."
msgstr ""
#
#. type: Plain text
msgid "Any package can be installed for first one architecture and then the other with option @option{--merge-multiarch}, but the package source must be a tarball (and as before, running on a 64-bit version of Windows with both versions of R installed)."
msgstr ""
#
#. type: Plain text
msgid "Finally, a package without a @code{src/Makefile.win} file and no or empty or architecture-independent @code{configure.win} file can be installed for both architectures from 32-bit Windows if the 64-bit components were selected when R was installed and option @option{--compile-both} is given.  Obviously, only the 32-bit installation can be tested."
msgstr ""
#
#. type: node
#, no-wrap
msgid "What should I expect to behave differently from the Unix version"
msgstr ""
#
#. type: node
#, no-wrap
msgid "I hear about some nifty features."
msgstr ""
#
#. type: node
#, no-wrap
msgid "Circles appear as ovals on screen"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I move focus to a graphics window or the console?"
msgstr ""
#
#. type: section
#, no-wrap
msgid "What does TAB completion do?"
msgstr ""
#
#. type: section
#, no-wrap
msgid "What should I expect to behave differently from the Unix version of R?"
msgstr ""
#
#. type: itemize
msgid "R commands can be interrupted by @key{Esc} in @command{Rgui.exe} and @key{Ctrl-break} or @key{Ctrl-C} in @command{Rterm.exe}: @key{Ctrl-C} is used for copying in @command{Rgui.exe}."
msgstr ""
#
#. type: itemize
msgid "Command-line editing is always available, but is somewhat simpler than the readline-based editing on Unix.  For @command{Rgui.exe}, the menu item `Help | Console' will give details.  For @command{Rterm.exe} see file @file{README.rterm}."
msgstr ""
#
#. type: item
#, no-wrap
msgid "Paths to files (e.g.@: in @code{source()}) can be specified with"
msgstr ""
#
#. type: itemize
msgid "either \"/\" or \"\\\\\"."
msgstr ""
#
#. type: item
#, no-wrap
msgid "@code{system()} is slightly different: see its help page and that"
msgstr ""
#
#. type: itemize
msgid "of @code{shell()}."
msgstr ""
#
#. type: section
#, no-wrap
msgid "I hear about some nifty features: please tell me about them!"
msgstr ""
#
#. type: Plain text
msgid "You have read the file @file{README.3.2.0 Under development (unstable)}? There are file menus on the R console, pager and graphics windows.  You can source and save from those menus, and copy the graphics to @code{png}, @code{jpeg}, @code{bmp}, @code{postscript}, @code{PDF} or @code{metafile}.  There are right-click menus giving shortcuts to menu items, and optionally toolbars with buttons giving shortcuts to frequent operations."
msgstr ""
#
#. type: Plain text
msgid "If you resize the R console the @code{options(width=)} is automatically set to the console width (unless disabled in the configuration file)."
msgstr ""
#
#. type: Plain text
msgid "The graphics has a history mechanism.  As @file{README.3.2.0 Under development (unstable)} says:"
msgstr ""
#
#. type: quotation
msgid "`The History menu allows the recording of plots.  When plots have been recorded they can be reviewed by @key{PgUp} and @key{PgDn}, saved and replaced.  Recording can be turned on automatically (the Recording item on the list) or individual plots can be added (Add or the @key{INS} key).  The whole plot history can be saved to or retrieved from an R variable in the global environment.  The format of recorded plots may change between R versions.  Recorded plots should @strong{not} be used as a permanent storage format for R plots."
msgstr ""
#
#. type: quotation
msgid "There is only one graphics history shared by all the windows devices.'"
msgstr ""
#
#. type: Plain text
msgid "The R console and graphics windows have configuration files stored in the @file{RHOME\\etc} directory called @file{Rconsole} and @file{Rdevga}; you can keep personal copies in your @file{HOME} directory.  They contain comments which should suffice for you to edit them to your preferences.  For more details see @code{?Rconsole}.  There is a GUI preferences editor invoked from the @code{Edit} menu which can be used to edit the file @file{Rconsole}."
msgstr ""
#
#. type: section
#, no-wrap
msgid "Circles appear as ovals on screen."
msgstr ""
#
#. type: Plain text
msgid "The graphics system asks Windows for the number of pixels per inch in the X and Y directions, and uses that to size graphics (which in R are in units of inches).  Sometimes the answer is a complete invention, and in any case Windows will not know exactly how the horizontal and vertical size have been set on a monitor which allows them to be adjusted.  You can specify correct values either in the call to @code{windows} or as options: see @code{?windows}.  (Typically these are of the order of 100.)"
msgstr ""
#
#. type: Plain text
msgid "On one of our systems, the screen height was reported as 240mm, and the width as 300mm in 1280 x 1024 mode and 320mm in 1280 x 960 and 1600 x 1200 modes.  In fact it was a 21\" monitor and 400mm x 300mm!"
msgstr ""
#
#. type: Plain text
msgid "This is less common with LCD screens but not unknown, particularly if they are not running at their native resolution."
msgstr ""
#
#. type: Plain text
msgid "You may want to do this from within a function, for example when calling @samp{identify} or @samp{readline}.  Use the function @samp{bringToTop()}.  With its default argument it brings the active graphics window to the top and gives it focus.  With argument @samp{-1} it brings the console to the top and gives it focus."
msgstr ""
#
#. type: Plain text
msgid "This works for @command{Rgui.exe} in MDI and SDI modes, and can be used for graphics windows from @command{Rterm.exe} (although Windows may not always act on it)."
msgstr ""
#
#. type: Plain text
msgid "Both @command{Rgui} and @command{Rterm} support @kbd{TAB} completion.  Hitting @kbd{TAB} whilst entering a command line completes the current `word' as far as is unambiguously possible.  Hitting @kbd{TAB} a second time then shows a list of possible completions (or the first few if there are many): the user can then enter one or more characters and hit @kbd{TAB} again."
msgstr ""
#
#. type: Plain text
msgid "What is it `completing'? There are two modes: within an unterminated (single- or double-) quoted expression it completes file paths.@footnote{It does not have a complete understanding of Windows file paths, but can complete most relative or absolute file paths, including drives and spaces. Relative paths on drives are not handled, for example.} Otherwise, it is completing R expressions: most obviously it will match visible R object names and keywords, so @kbd{apr} followed by @kbd{TAB} will (in a vanilla session) complete to @code{apropos}.  After a function name and parenthesis (e.g.@: @kbd{apropos(}) it will complete argument names (and @kbd{=}), and after @kbd{$} or @kbd{@@} it will complete list components or slot names respectively."
msgstr ""
#
#. type: Plain text
msgid "This feature can be turned off: @command{Rgui} has two menu items to do so, and setting the environment variable @env{R_COMPLETION} to @code{FALSE} turns it off completely for both @command{Rgui} and @command{Rterm}.  Further, the behaviour can be fine-tuned: to see the settings available use"
msgstr ""
#
#. type: example
#, no-wrap
msgid "?rc.settings\n"
msgstr ""
#
#. type: Plain text
msgid "which also explains how the various types of completion work."
msgstr ""
#
#. type: Plain text
msgid "This feature is very similar to the completion available in the @code{readline}-based command line interface on Unix-alikes: the OS X GUI @code{R.app} has a different completion scheme."
msgstr ""
#
#. type: node
#, no-wrap
msgid "My workspace gets saved in a strange place.  How do I stop this?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I store my workspace in a different place?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I load workspaces saved under Unix/GNU-Linux or OS X?"
msgstr ""
#
#. type: section
#, no-wrap
msgid "My workspace gets saved in a strange place: how do I stop this?"
msgstr ""
#
#. type: Plain text
msgid "Have you changed the working directory?: see Q6.2."
msgstr ""
#
#. type: Plain text
msgid "Use the `File | Change Dir...' menu item to select a new working directory: this defaults to the last directory you loaded a file from.  The workspace is saved in the working directory.  You can also save a snapshot of the workspace from the `Save Workspace...' menu item."
msgstr ""
#
#. type: Plain text
msgid "From the command line you can change the working directory by the function @code{setwd}: see its help page."
msgstr ""
#
#. type: section
#, no-wrap
msgid "Can I load workspaces saved under Unix/GNU-Linux or Mac OS X?"
msgstr ""
#
#. type: Plain text
msgid "Yes.  All ports of R use the same format for saved workspaces, so they are interchangeable (for the same 3.x.? version of R, at least)."
msgstr ""
#
#. type: Plain text
msgid "Note though that character data in a workspace will be in a particular encoding that is not recorded in the workspace, so workspaces containing non-@acronym{ASCII} character data may not be interchangeable even on the same OS.  Since R marks character data when it knows it to be in UTF-8 or Latin-1 (including its Windows superset, CP1252), strings in those encodings are likely to be transferred correctly: fortunately this covers most of the common cases (OS X normally uses UTF-8, and Linux users are likely to use UTF-8 or perhaps Latin-1)."
msgstr ""
#
#. type: Plain text
msgid "It is possible to save references to package namespaces when saving the workspace: if that happens the package will need to be installed on the machine loading the workspace."
msgstr ""
#
#. type: node
#, no-wrap
msgid "The output to the console seems to be delayed"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Long lines seem to be truncated."
msgstr ""
#
#. type: section
#, no-wrap
msgid "When using Rgui the output to the console seems to be delayed."
msgstr ""
#
#. type: Plain text
msgid "This is deliberate: the console output is buffered and re-written in chunks to be faster and less distracting.  You can turn buffering off or on from the `Misc' menu or the right-click menu: @key{Ctrl-W} toggles the setting."
msgstr ""
#
#. type: Plain text
msgid "If you are sourcing R code or writing from a function, there is another option.  A call to the R function @code{flush.console()} will write out the buffer and so update the console."
msgstr ""
#
#. type: section
#, no-wrap
msgid "Long lines in the console or pager are truncated."
msgstr ""
#
#. type: Plain text
msgid "They only @strong{seem} to be truncated: that $ at the end indicates you can scroll the window to see the rest of the line.  Use the horizontal scrollbar or the @key{CTRL + left/right arrow} keys to scroll horizontally. (The @key{left/right arrow} keys work in the pager too.)"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How can I compile R from source?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "Can I use a fast BLAS?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I include compiled C code?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I debug code that I have compiled and dyn.load-ed?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "How do I include C++ code?"
msgstr ""
#
#. type: node
#, no-wrap
msgid "The output from my C code disappears."
msgstr ""
#
#. type: node
#, no-wrap
msgid "The output from my Fortran code disappears."
msgstr ""
#
#. type: node
#, no-wrap
msgid "The console freezes when my compiled code is running"
msgstr ""
#
#. type: Plain text
msgid "See the `R Installation and Administration' manual (for the version of R you want to install)."
msgstr ""
#
#. type: Plain text
msgid "Fast BLAS (Basic Linear Algebra Subprograms, @uref{http://www.netlib.org/@/blas/@/faq.html}) routines are used to speed up numerical linear algebra.  There is support in the R sources for the `tuned' BLAS called ATLAS (@uref{http://math-atlas.sourceforge.net}).  The savings can be appreciable but because ATLAS is tuned to a particular chip we can't use it generally.  However, linear algebra on large matrices is not often an important part of R computations, and more typical calculations on small matrices may run slower."
msgstr ""
#
#. type: Plain text
msgid "BLAS support is supplied by the single DLL @file{R_HOME\\bin\\x64\\Rblas.dll}, and you can add a fast BLAS just by replacing that.  Replacements for 32-bit R and some of the older common chips are available on CRAN in directory @file{bin/windows/contrib/ATLAS}.  See the R Installation and Administration' manual for how to build an ATLAS @file{Rblas.dll} tuned to your system using the R sources.  Unfortunately the process has been less successful when tried for the common current chips such as Intel's Core 2."
msgstr ""
#
#. type: Plain text
msgid "Versions of Dr Kazushige Goto's BLAS (see @uref{http://en.wikipedia.org/wiki/Kazushige_Goto}) for 64-bit Windows by Ei-Ji Nakama can be found at @uref{http://prs.ism.ac.jp/~nakama/SurviveGotoBLAS2/binary/windows/x64/}.  Just download the file @file{Rblas.dll} appropriate to your CPU and replace @file{@var{R_HOME}/bin/x64/Rblas.dll}.  (There is also a generic version called @samp{DYNAMIC_ARCH} that tries to adapt itself to the CPU found -- however if you know the exact CPU used it is better to download the CPU-specific version.  Note that development of that BLAS was frozen in 2010 so you will not find versions for recent CPUs.)"
msgstr ""
#
#. type: Plain text
msgid "Note that fast BLAS implementations may give different (and often slightly less accurate) results than the reference BLAS included in R."
msgstr ""
#
#. type: Plain text
msgid "We strongly encourage you to do this @emph{via} building an R package: see the @emph{`Writing R Extensions'} manual.  In any event you should get and install the tools and toolchain mentioned in the `R Installation and Administration' manual.  Then you can use"
msgstr ""
#
#. type: example
#, no-wrap
msgid "...\\bin\\x64\\R CMD SHLIB foo.c bar.f\n"
msgstr ""
#
#. type: Plain text
msgid "to make @file{foo.dll}.  Use @command{...\\bin\\x64\\R CMD SHLIB --help} for further options, or see @code{?SHLIB}.  (Replace @code{x64} by @code{i386} for 64-bit R.)"
msgstr ""
#
#. type: Plain text
msgid "If you want to use Visual C++, Borland C++ or other compilers, see the appropriate section in @file{README.packages}."
msgstr ""
#
#. type: Plain text
msgid "Debugging under Windows is often a fraught process, and sometimes does not work at all.  If all you need is a @emph{just-in-time} debugger to catch crashes, consider (32-bit) @code{Dr. Mingw} from the @code{mingw-utils} bundle on @uref{http://www.mingw.org}.  That will be able to pinpoint the error, most effectively if you build a version of R with debugging information as described below."
msgstr ""
#
#. type: Plain text
msgid "First, build a version of the R system with debugging information by"
msgstr ""
#
#. type: example
#, no-wrap
msgid ""
"make clean\n"
"make DEBUG=T\n"
msgstr ""
#
#. type: Plain text
msgid "and make a debug version of your package by"
msgstr ""
#
#. type: example
#, no-wrap
msgid "Rcmd INSTALL --debug mypkg\n"
msgstr ""
#
#. type: Plain text
msgid "You will need a suitable version of @command{gdb} which matches your compiler.  Then you can debug by"
msgstr ""
#
#. type: example
#, no-wrap
msgid "gdb /path/to/3.2.0 Under development (unstable)/bin/x64/Rgui.exe\n"
msgstr ""
#
#. type: Plain text
msgid "(or use @command{Rterm.exe}.)  However, note"
msgstr ""
#
#. type: itemize
msgid "@command{gdb} may only be able to find the source code if we run in the location where the source was compiled (@file{3.2.0 Under development (unstable)/src/gnuwin32} for the main system, @file{3.2.0 Under development (unstable)/src/library/mypkg/src} for a package), unless told otherwise by the @command{directory} command.  It is most convenient to set a list of code locations via @command{directory} commands in the file @file{.gdbinit} in the directory from which @command{gdb} is run."
msgstr ""
#
#. type: itemize
msgid "It is only possible to set breakpoints in a DLL after the DLL has been loaded.  So a way to examine the function @code{tukeyline} in package @code{stats} might be"
msgstr ""
#
#. type: example
#, no-wrap
msgid ""
"     gdb ../../../../bin/i386/Rgui.exe\n"
"     (gdb) break WinMain\n"
"     (gdb) run\n"
"     [ stops with R.dll loaded ]\n"
"     (gdb) break R_ReadConsole\n"
"     (gdb) continue\n"
"     [ stops with console running ]\n"
"     (gdb) continue\n"
"     Rconsole> library(stats)\n"
"     (gdb) break tukeyline\n"
"     (gdb) clear R_ReadConsole\n"
"     (gdb) continue\n"
"     Rconsole> example(line)\n"
"     ...\n"
msgstr ""
#
#. type: itemize
msgid "Alternatively, in @command{Rgui} you can use the `Misc|Break to debugger' menu item after your DLL is loaded.  The C function call @code{breaktodebugger()} will do the same thing."
msgstr ""
#
#. type: itemize
msgid "Fortran symbols need an underline appended."
msgstr ""
#
#. type: itemize
msgid "Windows has little support for signals, so the Unix idea of running a program under a debugger and sending it a signal to interrupt it and drop control back to the debugger does not work with a MinGW version of @command{gdb}.  It does often work with the @code{cygwin} version."
msgstr ""
#
#. type: Plain text
msgid "See @uref{http://www.stats.uwo.ca/@/faculty/@/murdoch/@/software/@/debuggingR/@/gdb.shtml} for some further details."
msgstr ""
#
#. type: Plain text
msgid "You need to do two things:"
msgstr ""
#
#. type: Plain text
msgid "(a) Write a wrapper to export the symbols you want to call from R as @code{extern \"C\"}."
msgstr ""
#
#. type: Plain text
msgid "(b) Include the C++ libraries in the link to make the DLL.  Suppose @file{X.cc} contains your C++ code, and @file{X_main.cc} is the wrapper, as in the example in @emph{`Writing R Extensions'}.  Then build the DLL by (@command{gcc})"
msgstr ""
#
#. type: example
#, no-wrap
msgid "...\\bin\\x64\\R CMD SHLIB X.cc X_main.cc\n"
msgstr ""
#
#. type: Plain text
msgid "or (VC++, which requires extension @code{.cpp})"
msgstr ""
#
#. type: example
#, no-wrap
msgid ""
"cl /MT /c X.cpp X_main.cpp\n"
"link /dll /out:X.dll /export:X_main X.obj X_main.obj\n"
msgstr ""
#
#. type: Plain text
msgid "and call the entry point(s) in @code{X_R}, such as @code{X_main}.  Construction of static variables will occur when the DLL is loaded, and destruction when the DLL is unloaded, usually when R terminates."
msgstr ""
#
#. type: Plain text
msgid "Note that you will not see the messages from this example in the GUI console: see the next section."
msgstr ""
#
#. type: section
#, no-wrap
msgid "The output from my C code disappears.  Why?"
msgstr ""
#
#. type: Plain text
msgid "The @command{Rgui.exe} console is a Windows application: writing to @code{stdout} or @code{stderr} will not produce output in the console.  (This will work with @command{Rterm.exe}.)  Use @code{Rprintf} or @code{REprintf} instead.  These are declared in header file @file{R_ext/PrtUtil.h}."
msgstr ""
#
#. type: Plain text
msgid "Note that output from the console is delayed (@pxref{The output to the console seems to be delayed}), so that you will not normally see any output before returning to the R prompt."
msgstr ""
#
#. type: section
#, no-wrap
msgid "The output from my Fortran code disappears.  Why?"
msgstr ""
#
#. type: Plain text
msgid "Writing to Fortran output writes to a file, not the @command{Rgui} console.  Use one of the subroutines @code{dblepr}, @code{intpr} or @code{realpr} documented in the @emph{`Writing R Extensions'} manual."
msgstr ""
#
#. type: Plain text
msgid "Note that output from the console is delayed (@pxref{The output to the console seems to be delayed}), so that you will not normally see any output before returning to the R prompt even when using the @code{xxxpr} subroutines."
msgstr ""
#
#. type: section
#, no-wrap
msgid "The console freezes when my compiled code is running."
msgstr ""
#
#. type: Plain text
msgid "The console, pagers and graphics window all run in the same thread as the R engine.  To allow the console etc to respond to Windows events, call @code{R_ProcessEvents()} periodically from your compiled code.  If you want output to be updated on the console, call @code{R_FlushConsole()} and then @code{R_ProcessEvents()}."
msgstr ""
#
#. type: ifhtml
msgid "@html <hr WIDTH=\"100%\"> <address> Last edited @value{LASTEDIT}: comments to <code><a href=\"mailto:R-windows@@R-project.org\">R-windows@@r-project.org</a></code> </address>"
msgstr ""
#
#. type: ifinfo
msgid "Last edited @value{LASTEDIT}: comments to <R-windows@@r-project.org>"
msgstr ""
#
#~ msgid "The information here applies only to recent versions of R for Windows, (@samp{3.0.0} or later).  It is biased towards users of 64-bit Windows."
#~ msgstr "본 FAQ는 윈도우 사용자를 위해서 작성되었습니다. 이 FAQ는 R의 Windows 포트를 위한 것 입니다. 이것은 버전에 대한 특징들을 설명합니다. 중 요한 R FAQ는 @uref{http://CRAN.R-project.org/doc/FAQ/R-FAQ.html}에서 찾을수 있습니다. 여기에 있는 정보는 Windows에 대한 최신버전(@samp{3.0.0} 이상)의 R만을 지원합니다. 이것은 64bit Windows 유저들에게편향되어집니다."
#
#~ msgid "Go to any CRAN site (see @uref{http://cran.r-project.org/@/mirrors.html} for a list), navigate to the @file{bin/windows/base} directory and collect the file(s) you need.  The current release is distributed as an installer @samp{3.2.0 Under development (unstable)-win.exe} of about 60Mb."
#~ msgstr "CRAN 사이트 ( @uref{http://cran.r-project.org/mirrors.html} )를 방분하셔서 @file{bin/windows/base} 디렉토리를 찾아보시기 바랍니다. 그곳에서 필요한 파일들을 찾으실 수 있습니다. 현재 배포된 버젼은 @samp{R-3.0.1-win.exe} 으로써 약 52 MB의 용량입니다."
#
#~ msgid "There are also links on that page to the @samp{r-patched} and @samp{r-devel} snapshots.  These are frequently updated builds of development versions of R.  The @samp{r-patched} build includes bug fixes to the current release, and @samp{r-devel} contains these as well as changes that will eventually make it into the next @samp{x.y.0} release."
#~ msgstr "앞서 언급한 사이트에서 가시면 @samp{r-patched} 와 @samp{r-devel} 의 스냅샷에 연결된 링크를 찾으실 수 있습니다. 이것은 자주 업데이트되는 R 개발 버젼 빌드 입니다. @samp{r-patched} 빌드는 오류 해결에서 최근 버젼까지를 포함하고 있고 @samp{r-devel}은 이런 업데이트 뿐만 아니라 차후의 @samp{x.y.0} 로 배포되는 업데이트를 가지고 있습니다."
#
#~ msgid "Current binary versions of R run on Windows XP or later, including on 64-bit versions: @xref{Can I use R on 64-bit Windows?}. The last version known to run on Windows 2000 was 2.12.2 and the last version supporting 95/98/ME/NT4 was 2.6.1."
#~ msgstr "현재 배포된 윈도위 XP 혹은 그 이후의 버젼에 (64비트 포함) 대해서는 이 곳의 링크를 확인하시기 바랍니다. (@xref{Can I use R on 64-bit Windows?}.)  윈도우 2000을 위한 마지막 버젼은 2.12.2 이고 윈도우  95/98/ME/NT4를 지원하는 마지막 버젼은 2.6.1 입니다."
#
#~ msgid "Your file system must allow case-honouring long file names (as is likely except perhaps for some network-mounted systems).  A installation takes 75--105Mb of disk space (up to 145Mb if ICU was included in the build, which is not currently the default)."
#~ msgstr "사용하시는 파일 체계가 대소문자를 구분하는 파일 이름을 지원해야합니다. (통상 네트워크 상에서 작동되는  몇몇의 시스템은 제외됩니다.) 설치에는 75-100MB의 디시크 공간이 필요합니다."
#
#~ msgid "After installation you should choose a working directory for R.  You will have a shortcut to @file{Rgui.exe} on your desktop and/or somewhere on the Start menu file tree, and perhaps also in the Quick Launch part of the taskbar (Vista and earlier).  Right-click each shortcut, select Properties... and change the `Start in' field to your working directory."
#~ msgstr "설치이후에, 사용자는 R의 working directory를 선택해야만 합니다. '@file{Rgui.exe}'(바로가기)가 바탕화면, 스타트 메뉴 파일 트리, 혹은 taskbar의 퀵 런처파트(vista 와 이전 버전들)에 생성될 것 입니다. 각각의 바로가 기를 마우스 우클릭하고, properties선택, 그리고 'start in' 를 사용자의 working directory로 변경하십시오"
#
#~ msgid "You may if you prefer run R from the command line of any shell you use, for example a `Command Prompt' or a port of a Unix shell such as @command{tcsh} or @command{bash}. (The command line can be anything you would put in the Target field of a shortcut, and the starting directory will be the current working directory of the shell.)"
#~ msgstr "만약 사용자가 사용하는 shell의 command line으로 부터 R을 실행하기를 선호한다면, 사용하십시오. 예를 들면 'Command Prompt'혹은 @command{tcsh}, @command{bash}와 같은 Unix shell의 포트를 사용하시면 됩니다.( 사용자는 cammand line에 자신이 원하는 어떠한 것이든 바로가기의 Target field안에 놓을 수 있습니다. directory를 시작하는 것은 현재 shell의 working dircetory 가 될 것 입니다)"
#
#~ msgid "Normally you can do this from the @samp{Programs and Features} group in the Control Panel.  If it does not appear there, run @file{unins000.exe} in the top-level installation directory.  On recent versions of Windows you may well be asked to confirm that you wish to run a program from an `unknown' or `unidentified' publisher."
#~ msgstr "일반적으로 사용자는 제어판 안의 @samp{Add/Remove Programs}(XP)혹은 @samp{Programs and Features}(Vista/7)에서 이것을 할 수 있습니다. 만약 이것이 제어판에 나타나지 않는다면 '@file{unis000.exe}를 top-level installation irectory 안에서 실행하십시오. 최신의 윈도우즈 버전들 위에서, 사용자는 'unknown' 혹은 'unidentified' publisher 로부터 그 프로그램은 실행 할 것인지에 대해 질문 받을것입니다"
#
#~ msgid "For all applications via Windows.  How you set an environment variable is system specific: under recent versions of Windows, go to `User Accounts' in the Control Panel, and select your account and then `Change my environment variables'."
#~ msgstr "XP/server 2003 에서의 사용자는 제어판 혹은 내컴퓨터 설정에서 System을 사용할 수 있습니다. Vista/7/Server 2008에서는 제어판 안의 'User Accounts'로 가서, 사용자의 계정을 선택한 다음, change my environment variables 를 선택하십시오. "
#
#~ msgid "Directly, no.  See CRAN packages @code{rscproxy} and @code{rcom} as well as @code{RDCOMServer}, @code{RDCOMClient}, @code{RDCOMEvents} and @code{SWinTypeLibs} from @uref{http://www.omegahat.org/}."
#~ msgstr "지원하지 않습니다. @uref{http://www.omegahat.org/}에서 CRAN packages @code{rscproxy}와 @code{rcom} 뿐만 아니라 @code{RDCOMClient}, @code{RDCOMEvents} 와 @code{SWinTypeLibs}를 보십시오"
#
#~ msgid "(a) Use the alternative @file{internet2.dll} by starting R with the flag @option{--internet2} (@pxref{How do I install R for Windows?}) or calling @code{setInternet2(TRUE)}, or setting the environment variable @env{R_WIN_INTERNET2} to a non-empty value.  These cause R to use the Internet Explorer internals, which may already be configured for use with proxies.  Note that this does @emph{not} work with proxies that need authentication."
#~ msgstr "(a) R을 the flag @option{--internet2}(@pxref{How do I install R for Windows?}.)함께 실행하거나 혹은 @code{setInternet2(TRUE)}를 불러와서, 혹은 @env{R_WIN_INTERNET2}을 non-empty value 로 지정해서 대체 가능한 '@file{internet2.dll}'을 사용하십시오. 이것들은 R이 인터넷 익스플로러를 internals를 사용하게 합니다. Internet Explorer internals은 이미 프록시와 함께 사용되도록 설정되어 있을지도 모릅니다. 여기서 중요한 점은, 권한이 필요한 프록시와는 실행되지 않습니다."
